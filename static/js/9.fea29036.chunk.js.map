{"version":3,"sources":["engine/mix/actions.js","engine/mix/constants.js","engine/mix/MultiMix.js","components/exhibit/Playhead.js","components/landing/StickyLogo.js","components/user/PatternButtons.js","engine/MultiSequencerEngine.js","components/exhibit/Triangle.js","components/exhibit/Row.js","components/exhibit/ExhibitViewer.js","components/explore/details/SaveButton.js","components/explore/details/CombineButton.js","components/explore/details/ExploreWork.js","components/explore/comments/PendingComments.js","components/explore/links/Annotation.js","components/explore/comments/useComments.js","components/explore/comments/Comments.js","components/explore/comments/CommentsPane.js","decentralized/lists/ExploreLists.js","components/explore/lists/Publish.js","components/explore/lists/EditList.js","components/explore/lists/List.js","components/explore/lists/ListsView.js","components/explore/toolbar/ExploreToolbar.js","components/explore/links/useTags.js","components/explore/links/TagEditor.js","components/explore/links/SequenceEdits.js","components/explore/links/AnnotationsView.js","components/explore/ExploreSearch.js","engine/mix/Savable.js","engine/mix/MixableSequencerEngine.js","components/explore/Navigation.js","components/explore/people/Person.js","components/explore/people/fetchPeople.js","components/explore/people/People.js","components/explore/work/fetchSequences.js","components/explore/work/fetchMixes.js","components/explore/work/types.js","components/explore/work/fetchLists.js","components/explore/work/fetchWorks.js","components/explore/mix2/RecordedMix.js","components/explore/mix2/BpmSlider.js","components/explore/mix2/MixButtons.js","components/explore/mix2/Toolbar.js","components/explore/mix2/WorkMetadata.js","components/explore/mix2/SubSequenceButtons.js","components/explore/mix2/WorkVolume.js","components/explore/mixer/TransposeKnob.js","components/explore/mixer/ColorKnob.js","components/explore/mix2/WorkMixer.js","components/explore/mix2/PatternOptions.js","components/explore/mix2/SamplerTrigger.js","components/explore/mix2/SampleOptions.js","components/explore/mix2/Sampler.js","components/explore/work/WorkMix.js","components/explore/mix2/Mixer.js","components/explore/work/WorkList.js","components/explore/work/WorkSamples.js","components/explore/work/Work.js","components/explore/work/Works.js","components/explore/work/constants.js","components/explore/work/useFilterWorks.js","components/explore/work/useMonths.js","components/explore/work/useScroll.js","components/explore/ExplorePage.js","components/explore/useLists.js","components/explore/initSequencer.js","components/explore/loading.js"],"names":["__webpack_require__","d","__webpack_exports__","switchToPattern","playWork","loadWork","unloadWork","changeTranspose","changeVolume","changeColor","changeBPM","_constants_js__WEBPACK_IMPORTED_MODULE_0__","sequenceId","subSequenceId","patternNumber","type","SWITCH_TO_PATTERN","work","PLAY_WORK","isTransport","LOAD_WORK","UNLOAD_WORK","transpose","CHANGE_TRANSPOSE","volume","CHANGE_VOLUME","color","CHANGE_COLOR","bpm","CHANGE_BPM","ROLL_ON","ROLL_OFF","superclass","_superclass","Object","_Users_alecresende_code_visual_sampler_sequencer_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__","_class2","_super","_createSuper","_this","_Users_alecresende_code_visual_sampler_sequencer_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__","this","_len","arguments","length","args","Array","_key","call","apply","concat","events","hasEdits","_Users_alecresende_code_visual_sampler_sequencer_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__","key","get","state","explore","isRecordingMix","sixteenths","parseFloat","Tone","Transport","position","split","Math","floor","trackStep","value","action","scheduled","undefined","time","currentTransportTime","sequencerEngine","getSequencerEngine","_Users_alecresende_code_visual_sampler_sequencer_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_3__","push","play","isNothingPlaying","clearScheduledEvents","worksLoaded","_loadWork","_Users_alecresende_code_visual_sampler_sequencer_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_Users_alecresende_code_visual_sampler_sequencer_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","wrap","_context","prev","next","console","log","some","w","newSequence","setWorkDefaults","abrupt","store","dispatch","setWorksLoaded","_Users_alecresende_code_visual_sampler_sequencer_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__","loadTrack","stop","_x","index","indexOf","splice","unloadTrack","switchToSubSequence","channelMixer","mixEffects","filter","setMixColorValue","setWorkTranspose","setMasterVolume","setWorkVolume","updateBpm","initialState","_this$initialState","workVolumes","workTransposes","mixColorValues","id","engine","getState","user","_this2","saveInitialValuesForMix","setInitialValuesForMix","eventIds","map","event","schedule","setTimeout","forEach","clear","set","edits","setMixHasEdits","clearMix","i","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_redux__WEBPACK_IMPORTED_MODULE_1__","connect","props","step","isSequenceRolling","_ref","_ref$step","rollSteps","rollStart","inner","track","tracks","steps","getFactoredResolution","getNumberOfStepsAtBaseResolution","patternRollStepNumber","pattern","stepBuckets","stepNumber","style","left","width","createElement","className","StickyLogo","setToggled","toggled","_ref$url","url","onClick","src","NAMES","PatternButtons","multiSequencerEngine","currentSubSequence","subSequences","react__WEBPACK_IMPORTED_MODULE_5___default","chooseSubSequence","getSubSequencesComponent","patterns","p","currentPattern","backgroundColor","switchPattern","Component","engineId","sequencer","MultiSequencerEngine","_Users_alecresende_code_visual_sampler_sequencer_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","idToSequencerEngine","headSequencerEngine","sequencerEnginesToPlay","sequenceIdQueue","window","initAubio","keys","_trackStep","trackStepReal","Aubio","then","aubio","initSamplerTrack","s","sampleRateChooser","setSampleRate","samplerTrack","ticks","getTicksAtTime","transportTime","TransportTime","playing","playSequence","getSequencesPlaying","isPlaying","dispose","setIsPlaying","sequencesNotPlaying","scripting","MAX_TRACKS","shift","setLoadingSequence","ScriptableSequencerEngine","connectMixEffects","Scripting","setScripting","loadedSequenceId","loadSequence","auxEffects","ChannelStripEffects","Master","auxSend","input","loadNewSequence","isSampler","sequence","cancel","setHeadSequencerEngine","sequencesPlaying","setIsPlayingMix","x","every","stepOneCallback","_this3","getSamplerPlaySequence","t","Colors","mod","row","part","onMouseDown","useCallback","resolution","Resolution","pow","sequenceRolling","trackRolling","onMouseUp","triggered","useRef","notesTriggered","Set","noteToTracks","isPart","_step","_iterator","_createForOfIteratorHelper","done","_step2","_iterator2","_notesTriggered","note","add","err","e","f","start","end","has","_t1","_t2","_tracks","toConsumableArray","current","borderBottomColor","react_default","exhibit_Triangle","wallpaper","Playhead","Row","_useState","useState","_useState2","slicedToArray","show","setShow","save","name","saveOption","selectedGuild","SaveModal","onSave","onHide","combine","engines","values","getSequenceId","_worksLoaded","colors","_sequencerEngine","numSubSequences","pulledEffects","effects","_useState3","_useState4","selectedTrack","setSelectedTrack","useEffect","CirklonEditor","getColorForTrack","subSequence","Grids","isExplore","details_CombineButton","details_SaveButton","pendingComments","userName","setUserName","accounts","getUserName","_pendingComments","reverse","content","contentCache","Annotation","annotation","setContent","_useState5","_useState6","contentReferences","setContentReferences","h","web3","utils","fromAscii","annotationData","hash","bytes32ToIPFSHash","ipfs","getJson","ethereum","users","address","xanadu","getContentReferences","getColorForHash","useComments","works","_ref$linkType","linkType","SEQUENCE_ANNOTATION","comments","setComments","_ethereum$xanadu","getFlattenedAnnotations","links_Annotation","comment","setComment","setPendingComments","submit","_ref2","newAnnotationContent","comments_Comments","comments_PendingComments","reactstrap_es","placeholder","onChange","target","CONTRACT_ADDRESS","ExploreListsContract","contractAddress","NULL_BYTES32","padLeft","QUERY","BackendQuery","deleteList","asyncToGenerator","regenerator_default","EthereumTransaction","EXPLORE_LISTS","ipfsHashToBytes32","execute","publishBulk","_callee2","newContents","oldContents","titles","guildIds","_context2","title","_x2","_x3","_x4","_x5","getLists","_ref3","_callee3","query","_context3","from","ListEdited","select","t0","filterDeletedLists","t1","getLatestLists","executeQuery","t2","sent","t3","_ref4","_callee4","lists","deleted","_context4","newContent","ListDeleted","contentHash","_x6","newToPrev","list","previousContent","rootToLists","root","getRoot","latest","sort","b","blockNumber","unpublished","setExploreUnpublished","_unpublished","lstorage","getItem","JSON","parse","publishChanges","change","oldHash","Publish_createForOfIteratorHelper","addJson","finish","setItem","stringify","removeItem","projectDragging","setProjectDragging","hide","onDelete","setName","projects","setProjects","imageHash","setImageHash","_useState7","_useState8","trackDragging","setTrackDragging","image","onDrop","onOrderChangeDrop","destinationTrack","_projects","to","slice","deleteProject","project","json","_list","unpublishedChanges","uuid","onDragOver","preventDefault","onDragStart","draggable","ImageHandler","confirm","isEditable","setIsEditable","isEditing","setIsEditing","objectSpread","setList","backgroundImage","getHashUrl","getAccount","toLowerCase","doneEditing","onListChanged","getClassName","lists_EditList","removeList","creatingNewList","lists_List","lists_Publish","personSelected","setPersonSelected","setExplorePersonSelected","onNewList","children","isOpen","toggle","size","caret","useTags","numPending","tags","setTags","getAnnotations","SEQUENCE_TAG","newTag","text","trim","newAnnotation","setText","ref","_useTags","focus","tag","SequenceEdit","edit","date","setDate","getBlockDate","toISOString","substring","allSequences","setEdits","getEditsForSequence","SequenceEdits_SequenceEdit","open","AnnotationsView","annotationsView","links","AnnotationsView_LinkType","linkNumber","AnnotationEdit","links_TagEditor","links_SequenceEdits","LinkType","boxX","points","workNumber","height","SearchOption","hideText","searchOptions","option","onClickOption","_ref2$baseClass","baseClass","_ref2$selectedClass","selectedClass","ExploreSearch","searchTerm","setSearchTerm","setSearchOptions","setSearchTag","searchTag","includes","opt","options","o","ExploreSearch_SearchOption","MixableSequencerEngine","inherits","_class","classCallCheck","createClass","_saveMix","previousHash","t4","MIX","_loadMix","mix","worksToLoad","unloadAll","setExploreMixLoaded","MultiMix","Option","selected","selectedRecord","discover","guilds","showLogin","exploreOption","userToken","setOption","setExploreOption","showPreferences","setShowPreferences","isLoggedIn","Navigation_Option","HOME","GUILDS","MESSAGES","GuildsMenu","TransactionsView","LoginModal","SettingsModal","onlyAppearance","Person","person","fetchPeople","sequences","getUsersFromResults","results","people","_i","userId","setPeople","personSelectedComponent","fetchSequences","starred","favorited","guildId","getProjects","fetchMixes","MixContract","NewMix","fetchLists","fetched","unsavedLists","fetchLists_createForOfIteratorHelper","y","unsaved","fetchWorks","GuildSamplesContract","setWorks","setIsFetching","mixes","_x7","exists","originalMix","saved","setSaved","author","setAuthor","saveMix","mixHash","round","react_bootstrap_slider_default","max","min","orientation","reversed","playingMap","setRecordingExploreMix","setIsRecordingMix","onClickRecord","onClickPlay","playMix","PlayButton","Toolbar","mix2_BpmSlider","mix2_MixButtons","ClockComponent","RollButtons","showComments","_ref$editTags","editTags","showTags","setShowTags","_useProjectMetadata","useProjectMetadata","isStarred","showStar","isFavorited","onStarClicked","onFavoriteClicked","onClickTag","stopPropagation","ConditionedComponent","condition","MIN_VOLUME","MAX_VOLUME","masterVolume","masterVolumes","getVolumeRatio","ratio","fullRatio","getVolumeFromRatio","v","lib","angleOffset","angleRange","initialValue","arcWidth","background","radius","setColorValue","_ref$value","isLoading","loadingSequence","isAnnotationShowing","exploreWork","setExploreWork","setTitle","thumbnail","setThumbnail","guildSequences","_decryptQueryResult","_wallpaper","getWallpapers","ProgressBar","titleColor","playStyle","innerStyle","mix2_WorkVolume","mix2_SubSequenceButtons","mixer_TransposeKnob","mixer_ColorKnob","_work","mix2_WorkMetadata","PatternOptions","recording","setDeleting","deleting","recClass","delClass","RESOLUTION","SamplerTrigger","StepData","setLastClicked","instrument","recordedTrigger","setRecordedTrigger","lastTrigger","setLastTrigger","lastRelease","setLastRelease","sample","defaultSampler","keyboard","isCommandDown","loop","triggerRelease","triggerAttack","RecordedTrigger","gated","record","onTrigger","trackNumber","Date","getTime","duration","onRelease","removeEventListeners","removeEventListener","TRIGGER_SAMPLE","RELEASE_SAMPLE","addEventListener","videoId","onMouseLeave","getThumbnail","SampleOptions","lastClicked","deleteSample","setGated","looping","setLooping","setWarp","trackLength","setTrackLength","onClickLoop","loopParameter","onClickGate","onClickLength","newTrackLength","changeLength","isWarped","gateClass","loopClass","saturate","getId","loopingStyle","gatedStyle","lengthStyle","ParameterKnob","parameter","volumeParameter","transposeParameter","Sampler","samplersLoaded","setRecording","onClickRecording","waveform","PrettyWaveform","sampler","soundId","buffer","audioBuffer","WorkMix","mixMode","authors","setAuthors","setMix","obj","deleteButton","isEdit","mixLoaded","mixHasEdits","loadedMixComponent","mix2_WorkMixer","mix2_RecordedMix","listData","setListData","Work","memo","onClickMix","loadSample","onClickList","graphic","setGraphic","collaborators","setCollaborators","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","getWorkGraphic","promises","Work_createForOfIteratorHelper","c","Promise","all","work_WorkList","previousSequence","hours","minutes","timeSince","ceil","formatDate","onClickWork","numTracks","innerWidth","scrollTop","setState","_useFilterWorks","setIsLoading","userWorks","filterSounds","filterProjects","filterLists","scrollTo","document","getElementById","useFilterWorks","_useMonths","getMonth","currentMonth","setCurrentMonth","months","setMonths","getBlockMonths","onClickMonth","month","block","q","parseInt","skipTracks","useMonths","_useScroll","onScroll","el","bottom","offsetHeight","scrollHeight","unbindScrolling","toSkip","perRow","_works","scrollWorks","useScroll","work_Work","PulseLoader_default","sizeUnit","loading","Months","animateWallpaper","defineProperty","setAllSequences","setExploreAllSequences","setCommandDown","setWallpaper","setAnimateWallpaper","setSequencerEngine","setUserId","setSamplersLoaded","_useLists","setCreatingNewList","setLists","shouldDelete","filtered","_lists","useLists","isFetching","setEthereum","crypto","initGuilds","setStore","LOW_SAMPLE_RATE","multiMix","initSequencerEngine","fetchUserId","onKeyDown","onKeyUp","match","params","getSequence","_unloadWork","loadMix","_loadSample","sampleId","addSampledInstrumentTrack","Sample","load","newSample","monophonic","_deleteSample","deleteTrack","getUser","isMobile","exploreClass","item","ExploreGuilds","mix2_Mixer","lists_ListsView","explore_Navigation","comments_CommentsPane","toolbar_ExploreToolbar","explore_ExploreSearch","UnknownProgressBar","details_ExploreWork","work_Works"],"mappings":"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","file":"static/js/9.fea29036.chunk.js","sourcesContent":["import {\n    SWITCH_TO_PATTERN,\n    PLAY_WORK,\n    LOAD_WORK,\n    UNLOAD_WORK,\n    CHANGE_TRANSPOSE,\n    CHANGE_VOLUME,\n    CHANGE_BPM,\n    CHANGE_COLOR,\n    ROLL_ON,\n    ROLL_OFF\n} from './constants.js';\n\nexport const switchToPattern =\n    (sequenceId, subSequenceId, patternNumber) => ({\n        type: SWITCH_TO_PATTERN,\n        sequenceId,\n        subSequenceId,\n        patternNumber\n    });\n\nexport const playWork =\n    (work) => ({\n        type: PLAY_WORK,\n        work,\n        isTransport: true\n    });\n\nexport const loadWork =\n    (work) => ({\n        type: LOAD_WORK,\n        work\n    });\n\nexport const unloadWork =\n    (work) => ({\n        type: UNLOAD_WORK,\n        work\n    });\n\nexport const changeTranspose =\n    (sequenceId, transpose) => ({\n        type: CHANGE_TRANSPOSE,\n        sequenceId,\n        transpose\n    });\n\nexport const changeVolume  =\n    (sequenceId, volume) => ({\n        type: CHANGE_VOLUME,\n        sequenceId,\n        volume\n    });\n\nexport const changeColor=\n    (sequenceId, color) => ({\n        type: CHANGE_COLOR,\n        sequenceId,\n        color\n    });\n\nexport const changeBPM =\n    (bpm) => ({\n        type: CHANGE_BPM,\n        bpm\n    });\n\nexport const rollOn =\n    (resolution) => ({\n        type: ROLL_ON,\n        resolution\n    });\n\nexport const rollOff =\n    () => ({\n        type: ROLL_OFF\n    });\n\n\n\n\n\n\n","export const SWITCH_TO_PATTERN = 1;\nexport const PLAY_WORK = 2;\nexport const LOAD_WORK = 3;\nexport const UNLOAD_WORK = 4;\nexport const CHANGE_TRANSPOSE = 5;\nexport const CHANGE_VOLUME = 6;\nexport const CHANGE_BPM = 7;\nexport const CHANGE_COLOR = 8;\nexport const ROLL_ON = 9;\nexport const ROLL_OFF = 10;\n","import {\n    SWITCH_TO_PATTERN,\n    PLAY_WORK,\n    LOAD_WORK,\n    UNLOAD_WORK,\n    CHANGE_TRANSPOSE,\n    CHANGE_VOLUME,\n    CHANGE_BPM,\n    CHANGE_COLOR,\n    ROLL_ON,\n    ROLL_OFF,\n} from './constants.js';\n\nimport Tone from 'tone';\nimport {\n    setWorksLoaded,\n    setWorkTranspose,\n    setMixColorValue,\n    setMixHasEdits,\n    setWorkVolume,\n} from 'actions/index.js';\n\n// mixin for recording mixes in explore page.\n// gets mixed in with MultiSequencerEngine\n\nexport default superclass => class extends superclass  {\n    events = [];\n    hasEdits = false;\n\n    get isRecordingMix() {\n        return this.state.explore.isRecordingMix;\n    }\n\n    get currentTransportTime() {\n        let sixteenths = parseFloat(Tone.Transport.position.split(\":\")[2]);\n        let remainder = sixteenths - Math.floor(sixteenths);\n        return \"0:0:\" + (remainder + (this.trackStep / 2));\n    }\n\n    dispatch(action, scheduled=false) {\n        let time = this.currentTransportTime; \n        let sequencerEngine =\n            action.sequenceId && this.getSequencerEngine(action.sequenceId);\n\n        switch (action.type) {\n        case SWITCH_TO_PATTERN:\n            this.switchToPattern(\n                sequencerEngine,\n                action.subSequenceId,\n                action.patternNumber\n            );\n            break;\n        case PLAY_WORK:\n            this.playWork(action.work);\n            break;\n        case LOAD_WORK:\n            this.loadWork(action.work);\n            break;\n        case UNLOAD_WORK:\n            this.unloadWork(action.work);\n            break;\n        case CHANGE_TRANSPOSE:\n            this.changeTranspose(sequencerEngine, action.transpose);\n            break;\n        case CHANGE_VOLUME:\n            this.changeVolume(sequencerEngine, action.volume);\n            break;\n        case CHANGE_COLOR:\n            this.changeColor(sequencerEngine, action.color);\n            break;\n        case CHANGE_BPM:\n            this.changeBPM(action.bpm);\n            break;\n        }\n\n        if (!scheduled && this.isRecordingMix) {\n            action = {\n                ... action,\n                time: time\n            };\n            this.events.push(action);\n            this.hasEdits = true;\n        }\n    }\n\n    playWork(work) {\n        this.play(work);\n\n        if (this.isNothingPlaying()) {\n            // then we must clear\n            this.clearScheduledEvents();\n        }\n    }\n\n    get worksLoaded() {\n        return this.state.explore.worksLoaded;\n    }\n\n    async loadWork(work) {\n        console.log('MultiMix.loadWork =', work);\n        // first check if work is loaded already\n        if (this.worksLoaded.some(\n            w => w.newSequence === work.newSequence)) {\n            let sequencerEngine = this.getSequencerEngine(work.newSequence);\n            this.setWorkDefaults(sequencerEngine);\n            return;\n        }\n\n        // if not then load it\n        this.store.dispatch(\n            setWorksLoaded([... this.worksLoaded, work]));\n\n        await this.loadTrack(work.newSequence);\n    }\n\n    unloadWork(work) {\n        // first check that we havent already unloaded\n        if (!this.worksLoaded.some(\n            w => w.newSequence === work.newSequence)) {\n            return;\n        }\n        let worksLoaded = [... this.worksLoaded];\n        let index = worksLoaded.indexOf(work);\n        worksLoaded.splice(index, 1);\n        this.store.dispatch(\n            setWorksLoaded(worksLoaded));\n        this.unloadTrack(work.newSequence);\n    }\n\n    switchToPattern(sequencerEngine, subSequenceId, patternNumber) {\n        if (!sequencerEngine) {\n            return;\n        }\n        sequencerEngine.switchToSubSequence(subSequenceId);\n        sequencerEngine.switchToPattern(patternNumber);\n    }\n\n    changeColor(sequencerEngine, color) {\n        if (!sequencerEngine) {\n            return;\n        }\n        sequencerEngine.channelMixer.mixEffects.filter = color;\n        this.store.dispatch(\n            setMixColorValue(\n                sequencerEngine.sequenceId,\n                color));\n    }\n\n    changeTranspose(sequencerEngine, transpose) {\n        if (!sequencerEngine) {\n            return;\n        }\n        sequencerEngine.transpose = transpose;\n        this.store.dispatch(\n            setWorkTranspose(\n                sequencerEngine.sequenceId,\n                transpose));\n    }\n\n    changeVolume(sequencerEngine, volume) {\n        if (!sequencerEngine) {\n            return;\n        }\n        sequencerEngine.setMasterVolume(volume, 0.05);\n        this.store.dispatch(\n            setWorkVolume(\n                sequencerEngine.sequenceId,\n                volume));\n    }\n\n    changeBPM(bpm) {\n        this.updateBpm(bpm);\n    }\n\n    setInitialValuesForMix() {\n        if (this.initialState) {\n            let {\n                workVolumes,\n                worksLoaded,\n                workTransposes,\n                mixColorValues,\n                bpm\n            } = this.initialState;\n\n            if (bpm) {\n                this.changeBPM(bpm);\n            }\n            \n            for (let id in workVolumes) {\n                let engine = this.getSequencerEngine(id);\n                if (engine) {\n                    this.changeVolume(\n                        engine,\n                        workVolumes[id]);\n                }\n            }\n            for (let id in workTransposes) {\n                let engine = this.getSequencerEngine(id);\n                if (engine) {\n                    this.changeTranspose(\n                        engine,\n                        workTransposes[id]);\n                }\n            }\n            for (let id in worksLoaded) {\n                this.loadWork(worksLoaded[id]);\n            }\n            for (let id in mixColorValues) {\n                let engine = this.getSequencerEngine(id);\n                if (engine) {\n                    this.changeColor(\n                        engine,\n                        mixColorValues[id]);\n                }\n            }\n        }\n    }\n\n    saveInitialValuesForMix() {\n        let state = this.store.getState();\n        this.initialState = {\n            worksLoaded: [... state.explore.worksLoaded],\n            workTransposes: {... state.explore.workTransposes},\n            workVolumes: {... state.explore.workVolumes},\n            bpm: state.user.bpm,\n            mixColorValues: {... state.explore.mixColorValues}\n        };\n    }\n\n    playMix(play) {\n        if (play) {\n            if (this.isRecordingMix) {\n                this.saveInitialValuesForMix();\n            } else {\n                this.setInitialValuesForMix();\n            }\n\n            this.eventIds = this.events.map(\n                event =>\n                    Tone.Transport.schedule((time) => {\n                        if (event.type === PLAY_WORK) {\n                            time = 0;\n                        }\n                        setTimeout(() => {\n                            this.dispatch(event, true);\n                        }, time);\n                    }, event.time));\n            this.play();\n        } else {\n            this.clearScheduledEvents();\n            this.stop();\n        }\n\n    }\n\n    clearScheduledEvents() {\n        if (this.eventIds) {\n            this.eventIds.forEach(id => Tone.Transport.clear(id));\n            this.eventIds = [];\n        }\n    }\n\n    setWorkDefaults(work) {\n        this.changeTranspose(work, 0);\n        this.changeVolume(work, 0);\n    }\n\n    set hasEdits(edits) {\n        this.store.dispatch(\n            setMixHasEdits(edits));\n    }\n\n    unloadAll() {\n        this.clearMix();\n        this.stop();\n        this.hasEdits = false;\n        \n        let worksLoaded = [... this.worksLoaded];\n        for (let i in worksLoaded) {\n            this.unloadWork(worksLoaded[i]);\n        }\n    }\n}\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\n\nconst Playhead = ({step=0, isSequenceRolling, sequencerEngine}) => { \n\n    let rollingStepNumber = undefined;\n    let rollSteps = undefined;\n    let rollStart = undefined;\n    let inner = '';\n    if (isSequenceRolling) {\n        let track = sequencerEngine.tracks[0];\n        if (track) {\n            let resolution = track.getFactoredResolution();\n            let steps = resolution.getNumberOfStepsAtBaseResolution();\n            let _stepNumber = track.patternRollStepNumber + step % steps;\n            rollingStepNumber = _stepNumber % track.pattern.stepBuckets.length;\n            rollSteps = steps;\n            rollStart = track.patternRollStepNumber;\n        }\n        rollSteps = rollSteps;\n        let stepNumber = (rollStart);\n        let style = {\n            left: ((12*8) * ((4 * Math.floor(stepNumber / 4)) % 32) / 32.0) + 'vw',\n            width: ((12*8) * ((4 * Math.floor(rollSteps / 4)) % 32) / 32.0) + 'vw',\n        };\n        inner = (\n            <div className=\"playhead roll-visualizer\" style={style}>\n            </div>);\n\n    }\n\n    let style = {\n        left: ((12.5*8) * ((4 * Math.floor(step / 4)) % 32) / 32.0) + 'vw'\n    };\n\n    return [\n        inner,\n        <div\n          style={style}\n          className=\"playhead\"\n        ></div>\n    ];\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n      step:props.sequencerEngine.trackStep,\n      isSequenceRolling: props.sequencerEngine.isSequenceRolling\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Playhead);\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\n\nconst StickyLogo = ({setToggled, toggled, url=\"/zequencer-logo-hiero.svg\"}) => { \n    return (\n        <img onClick={() => setToggled(!toggled)} className={toggled ? \"logo-hiero toggled\" : \"logo-hiero\"} src={url}/>\n    );\n};\n\nexport default StickyLogo;\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport {switchToPattern} from 'engine/mix/actions.js';\nconst NAMES = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H'];\n\nclass PatternButtons extends Component {\n    switchPattern(i) {\n        let {sequencerEngine} = this.props;\n        sequencerEngine.multiSequencerEngine.dispatch(\n            switchToPattern(\n                sequencerEngine.sequenceId,\n                sequencerEngine.currentSubSequence.id,\n                i));\n    }\n\n    chooseSubSequence(id) {\n        this.props.sequencerEngine.switchToSubSequence(id);\n    }\n\n    getSubSequencesComponent() {\n        let subSequences = this.props.subSequences || [];\n        return (<div className=\"sub-sequence-buttons\">\n                {subSequences.map(\n                  (id, i) =>\n                      <div\n                            key={NAMES[i]}\n                            onClick={() => this.chooseSubSequence(id)}\n                            className={id === this.props.currentSubSequence ?\n                                      \"sub-sequence selected\" : \"sub-sequence\"}>\n                        {NAMES[i]}</div>)}\n                </div>\n               );\n    }\n\n    render() {\n        if (this.props.sequencerEngine.tracks[0] === undefined) {\n            return this.getSubSequencesComponent();\n        }\n        return (\n            <div>\n              <div className=\"pattern-buttons\">\n                {this.props.sequencerEngine.tracks[0].patterns.map(\n                    (p, i) =>\n                        <div\n                          style={\n                              this.props.color &&\n                                  this.props.currentPattern === i ? {backgroundColor: this.props.color} : {}\n                          }\n                              onClick={() => this.switchPattern(i)}\n                              className={this.props.currentPattern === i ? \"current pattern-button\" : \"pattern-button\"}>\n                          {i + 1}</div>)}\n            </div>\n                {this.getSubSequencesComponent()}\n           </div>\n        );\n    }\n}\nconst mapStateToProps = (state, props) => {\n    let sequenceId = props.sequencerEngine.engineId;\n    let subSequenceId = props.sequencerEngine.currentSubSequence.id;\n    let currentPattern = state.sequencer.currentPattern[subSequenceId] || 0;\n    return {\n        currentPattern: currentPattern,\n        subSequenceId: subSequenceId,\n        subSequences: state.sequencer.subSequences[sequenceId],\n        currentSubSequence: state.sequencer.currentSubSequence[sequenceId],\n    };\n};\n \nexport default connect(mapStateToProps, null)(PatternButtons);\n","import {setIsPlaying, setLoadingSequence, setIsPlayingMix} from 'actions/index.js';\nimport ChannelStripEffects from './channel/ChannelStripEffects.js';\nimport MultiMix from './mix/MultiMix.js';\nimport Tone from 'tone';\nimport sampleRateChooser from './SampleRateChooser.js';\nimport ScriptableSequencerEngine from 'engine/ScriptableSequencer.js';\nimport Scripting from 'scripting/Scripting.js';\n\nconst MAX_TRACKS = 8;\n\nclass MultiSequencerEngine {\n    constructor(store) {\n        this.store = store;\n\n        // map of sequenceId => sequencer engines synced together\n        this.idToSequencerEngine = {};\n\n        // the sequencer engine that triggers other sequencer\n        // engines to play on step 0.\n        this.headSequencerEngine = undefined;\n\n        this.sequencerEnginesToPlay = [];\n\n        this.sequenceIdQueue = [];\n\n        window.sequencerEngine = this;\n\n        this.initAubio();\n    }\n\n    getHead() {\n        return this.idToSequencerEngine[Object.keys(\n            this.idToSequencerEngine)[0]];\n    }\n\n    get state() {\n        return this.store.getState();\n    }\n\n    get trackStep() {\n        let trackStep = 0;\n        for (let id in this.idToSequencerEngine) {\n            let _trackStep = this.idToSequencerEngine[id].trackStepReal;\n            if (_trackStep > trackStep) {\n                return _trackStep;\n            }\n        }\n        return trackStep;\n    }\n\n    initAubio() {\n        window.Aubio().then((aubio) => {\n            this.aubio = aubio;\n            this.initSamplerTrack();\n        });\n    }\n \n    set sampleRate(s) {\n        sampleRateChooser.setSampleRate(s);\n    }\n\n    stop() {\n        for (let id in this.idToSequencerEngine) {\n            this.idToSequencerEngine[id].stop();\n        }\n        Tone.Transport.stop();\n    }\n\n    updateBpm(bpm) {\n        for (let id in this.idToSequencerEngine) {\n            this.idToSequencerEngine[id].updateBpm(bpm);\n        }\n    }\n\n    getSequencerEngine(id) {\n        if (id === undefined) {\n            return this.idToSequencerEngine[Object.keys(this.idToSequencerEngine)[0]];\n        }\n        if (id === -1 || id === '-1') {\n            return this.samplerTrack;\n        }\n        return this.idToSequencerEngine[id];\n    }\n\n    // in order to schedule multipl sequencer engines, synced together\n    // we have the first sequencer engine (called the headSequencerEngine),\n    // call this function at step 0/step 15. We then schedule a play\n    // for any sequener engines that are set to play, using the time\n    // passed to this function (i.e. when that step 0/15 will be)\n    stepOneCallback(time) {\n        this.sequencerEnginesToPlay.forEach(s => {\n            let ticks = Tone.Transport.getTicksAtTime(time);\n            let transportTime = new Tone.TransportTime(ticks, 'i');\n            s.play(transportTime);\n        });\n        this.sequencerEnginesToPlay = [];\n    }\n\n    getSamplerPlaySequence() {\n        this.samplerTrack.trackStep = 0;\n        this.samplerTrack.playing = true;\n        return this.samplerTrack.playSequence;\n    }\n\n    isNothingPlaying() {\n        return this.getSequencesPlaying().length === 0;\n    }\n\n    getSequencesPlaying(playing=true) {\n        let isPlaying = this.store.getState().sequencer.isPlaying;\n        return Object.keys(this.idToSequencerEngine).filter(\n            id => {\n                if (playing === false && isPlaying[id] === undefined) {\n                    return true;\n                } else {\n                    return isPlaying[id] === playing;\n                }\n            });\n    }\n\n    unloadTrack(sequenceId, dispose=true) {\n        let sequencerEngine = this.idToSequencerEngine[sequenceId];\n        if (sequencerEngine.playing) {\n            // i.e. stop the playing sequence\n            sequencerEngine.stop();\n        }\n        delete this.idToSequencerEngine[sequenceId];\n\n        let i = this.sequenceIdQueue.indexOf(sequenceId);\n        if (i > -1) {\n            this.sequenceIdQueue.splice(i, 1);\n        }\n        this.store.dispatch(setIsPlaying(sequenceId, undefined));\n        if (dispose) {\n            setTimeout(() => {\n                sequencerEngine.dispose();\n            }, 500);\n        }\n    }\n\n    async loadTrack(id) {\n        let sequencesNotPlaying = this.getSequencesPlaying(false);\n        if (this.sequenceIdQueue.length > (MAX_TRACKS - 1)) {\n            if (sequencesNotPlaying.length > 0) {\n                this.unloadTrack(sequencesNotPlaying[0]);\n            } else {\n                let sequenceId = this.sequenceIdQueue.shift();\n                this.unloadTrack(sequenceId);\n            }\n        }\n\n        this.store.dispatch(setLoadingSequence(id, true));\n        let sequencerEngine = new ScriptableSequencerEngine(\n            this.store, true, undefined, this.aubio);\n\n        sequencerEngine.channelMixer.connectMixEffects();\n        let scripting = new Scripting(sequencerEngine, true);\n        sequencerEngine.setScripting(scripting);\n        sequencerEngine.multiSequencerEngine = this;\n        sequencerEngine.loadedSequenceId = id;\n        sequencerEngine.setMasterVolume(1);\n        this.sequenceIdQueue.push(id);\n        this.idToSequencerEngine[id] = sequencerEngine;\n        this.store.dispatch(setIsPlaying(id, false));\n        await sequencerEngine.loadSequence(id);\n        /*\n        sequencerEngine.channelMixer.mixEffects.auxSend.connect(\n            this.auxEffects.input);\n            */\n    }\n\n    initSamplerTrack() {\n        if (!this.auxEffects) {\n            this.auxEffects = new ChannelStripEffects(\n                Tone.Master, this);\n        }\n        let sequencerEngine = new ScriptableSequencerEngine(\n            this.store, true, undefined, this.aubio);\n        sequencerEngine.channelMixer.connectMixEffects();\n        let scripting = new Scripting(sequencerEngine, true);\n        sequencerEngine.setScripting(scripting);\n        sequencerEngine.channelMixer.mixEffects.auxSend.connect(\n            this.auxEffects.input);\n        sequencerEngine.setMasterVolume(0);\n        sequencerEngine.loadNewSequence();\n\n        this.samplerTrack = sequencerEngine;\n        this.samplerTrack.isSampler = true;\n        this.samplerTrack.loadedSequenceId = -1;\n        this.changeVolume(this.samplerTrack, 0);\n    }\n\n    sequenceRolling() {\n        for (let id in this.idToSequencerEngine) {\n            let e = this.idToSequencerEngine[id];\n            if (e.isSequenceRolling) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    // plays a sequence (if none are playing), if one is already playing\n    // then it queues it up to be played on the next bar.\n    play(sequence) {\n        let sequencerEngine = this.getSequencerEngine(sequence && sequence.id);\n        if (sequencerEngine !== undefined) {\n           if (sequencerEngine.playing && this.getSequencesPlaying(true).length === 1) {\n               this.samplerTrack.playing = false;\n               this.samplerTrack.playSequence.stop();\n               this.samplerTrack.playSequence.cancel();\n               this.samplerTrack.loadNewSequence();\n           }\n            if (sequence && sequence.playing) {\n                this.setHeadSequencerEngine(undefined);\n            } \n            let sequencesPlaying = this.getSequencesPlaying(true);\n            if (this.getSequencesPlaying(true).length == 0 || sequencerEngine.playing) {\n                this.store.dispatch(setIsPlayingMix(true));\n                if (!sequencerEngine.playing && sequencesPlaying.length == 0) {\n                    this.setHeadSequencerEngine(sequencerEngine);\n                }\n                sequencerEngine.play();\n            } else {\n                this.sequencerEnginesToPlay.push(sequencerEngine);\n            }\n\n            sequencesPlaying = sequencesPlaying.map(x => this.idToSequencerEngine[x])\n                .filter(s => s !== sequencerEngine);\n            if (sequencesPlaying.length > 0 &&\n                sequencesPlaying.every(s => s.stepOneCallback === undefined)) {\n                this.setHeadSequencerEngine(sequencesPlaying[0]);\n            }\n        }\n   }\n\n    setHeadSequencerEngine(engine) {\n        if (engine === undefined && this.headSequencerEngine !== undefined) {\n            this.headSequencerEngine.stepOneCallback = undefined;\n            this.headSequencerEngine.getSamplerPlaySequence = undefined;\n            return;\n        }\n        this.headSequencerEngine = engine;\n        this.headSequencerEngine.stepOneCallback = (t) => this.stepOneCallback(t);\n        this.headSequencerEngine.getSamplerPlaySequence = (t) => this.getSamplerPlaySequence(t);\n    }\n}\n\nexport default MultiSequencerEngine;\n","import React, { useRef, useEffect, useCallback, useState} from 'react';\nimport Colors from \"components/Colors.js\";\nimport {connect} from 'react-redux';\nimport Resolution from 'engine/Resolution.js';\nconst colors = new Colors();\n\n// 6 rows row 0 is [0,1] row 1 is [2,3] row 2 is [4,5] row 3 is [6,7] row 4 [8, 9] , row 5 [10, 11]\nconst Triangle = ({sequencerEngine, row, part, step=0}) => { \n    const onMouseDown = useCallback(() => {\n        let resolution = new Resolution(Math.pow(2, 2 + Math.floor(part/2)), part % 2 === 1);\n        sequencerEngine.resolution = resolution;\n        sequencerEngine.sequenceRolling = true;\n        sequencerEngine.trackRolling = true;\n    }, [sequencerEngine, part]);\n\n    const onMouseUp = useCallback(() => {\n        sequencerEngine.sequenceRolling = false;\n        sequencerEngine.trackRolling = false;\n    }, [sequencerEngine, part]);\n\n    let triggered = useRef(false);\n    let track = useRef(undefined);\n\n    let notesTriggered = new Set();\n    let noteToTracks = {};\n    let isPart = part === 8 * (((4 * Math.floor(step / 4)) % 32) / 32.0);\n    if (sequencerEngine) { \n        for (let sub of sequencerEngine.subSequences) {\n            for (let track of sub.tracks) {\n                let _notesTriggered = track.notesTriggered || {};\n                for (let note in _notesTriggered) {\n                    note = mod(note, 12);\n                    notesTriggered.add(note);\n                    if (!noteToTracks[note]) {\n                        noteToTracks[note] = [];\n                    }\n                    noteToTracks[note].push(track);\n                }\n            }\n       }\n    }\n    let start = row*2;\n    let end = row*2 + 1;\n    let className = \"triangle\";\n    if ((notesTriggered.has(start) || notesTriggered.has(end))) {\n        let _t1 = noteToTracks[start] || [];\n        let _t2 = noteToTracks[end] || [];\n        let _tracks = [... _t1, ..._t2].map(x => 'white'); //colors.getColorForTrack(x));\n        if (isPart) {\n            triggered.current = true;\n            track.current = _tracks[part % _tracks.length];\n            className += \" triggered\";\n        }\n    } else {\n        if (isPart && step % 4 === 0) {\n            triggered.current = false;\n        }\n    }\n    let style = {};\n    if (triggered.current) {\n        className += \" old-trigger\";\n\n        if (track.current !== undefined) {\n            style.borderBottomColor = track.current;\n            // className += \" track-\" + track.current;\n        } else {\n            className += \" track-0\";\n        }\n    }\n    return (\n        <div onMouseDown={onMouseDown} onMouseUp={onMouseUp} style={style} className={className}>\n        </div>);\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n      step: props.sequencerEngine && props.sequencerEngine.trackStep\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nconst mod = (x,n) => {\n    return ((x%n)+n)%n;\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Triangle);\n","import React from 'react';\nimport Triangle from './Triangle.js';\n\nexport default ({sequencerEngine, row}) => {\n    let a = [0,1,2,3,4,5,6,7];\n    return (\n        <div className=\"row\">\n          {a.map(x => <Triangle sequencerEngine={sequencerEngine} row={row} part={x}/>)}\n        </div>);\n};\n","import React, {useCallback} from 'react';\nimport {setIsPlayingMix} from 'actions/index.js';\nimport { connect } from \"react-redux\";\nimport ipfs from 'decentralized/Ipfs.js';\nimport Row from './Row.js';\nimport Modals from 'components/v2/Modals.js';\nimport Playhead from './Playhead.js';\nimport {useSequencer} from 'components/v2/useSequencer.js';\nimport '../../Exhibit.scss';\n\nconst ExhibitViewer = ({sequencerEngine, wallpaper}) => {\n    return (\n        <div\n          className=\"exhibit\">\n          {sequencerEngine ? <Playhead sequencerEngine={sequencerEngine}/> : ''}\n          <Row sequencerEngine={sequencerEngine} row={0}/>\n          <Row sequencerEngine={sequencerEngine} row={1}/>\n          <Row sequencerEngine={sequencerEngine} row={2}/>\n          <Row sequencerEngine={sequencerEngine} row={3}/>\n          <Row sequencerEngine={sequencerEngine} row={4}/>\n          <Row sequencerEngine={sequencerEngine} row={5}/>\n       </div>\n    );\n};\n\nconst mapStateToProps = (state, props) => {\n    return {\n        wallpaper: state.sequencer.wallpaper,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n    setIsPlayingMix: (p) => dispatch(setIsPlayingMix(p))\n});\n \nexport default connect(mapStateToProps, mapDispatchToProps)(ExhibitViewer);\n\n\n\n","import React, { useEffect, useCallback, useState} from 'react';\nimport SaveModal from \"components/modals/SaveModal.js\";\nimport {connect} from 'react-redux';\n\nconst SaveButton = ({sequencerEngine}) => { \n    let [show, setShow] = useState(false);\n    const save = useCallback((name, saveOption, selectedGuild) => {\n        sequencerEngine.save(name, saveOption, true, selectedGuild);\n        setShow(false);\n    }, [setShow, sequencerEngine]);\n    return (\n        <div>\n          <SaveModal\n            sequencerEngine={sequencerEngine}\n            onSave={save}\n            onHide={() => setShow(false)}\n            show={show}/>\n          <div onClick={() => setShow(true)}className=\"work-save-button\">\n          </div>\n        </div>);\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SaveButton);\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {setWorksLoaded} from 'actions/index.js';\nimport {connect} from 'react-redux';\n\nconst CombineButton = ({\n    setWorksLoaded,\n    multiSequencerEngine,\n    sequencerEngine,\n    worksLoaded\n}) => { \n\n    let combine = useCallback(() => {\n        // combine the sequences that are not sequencerEgine\n        // into sequenceREngine and then destroy the other ones\n        let engines = Object.values(multiSequencerEngine.idToSequencerEngine).filter(\n            e => e !== sequencerEngine);\n        engines.forEach(\n            engine => sequencerEngine.subSequences =\n                [... sequencerEngine.subSequences, ... engine.subSequences]);\n        engines.forEach(\n            engine => multiSequencerEngine.unloadTrack(\n                engine.getSequenceId(), false));\n        let _worksLoaded = worksLoaded.filter(\n            x => x.newSequence === sequencerEngine.getSequenceId());\n        setWorksLoaded(_worksLoaded);\n    }, [worksLoaded, sequencerEngine]);\n\n    if (worksLoaded && worksLoaded.length > 1) {\n        return (\n            <div\n              onClick={combine}\n              className=\"combine-works-button\">\n              Combine Projects\n            </div>\n        );\n    }\n    return '';\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n      worksLoaded: state.explore.worksLoaded\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n      setWorksLoaded: (x) => dispatch(setWorksLoaded(x))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CombineButton);\n","import React, { useEffect, useCallback, useState} from 'react';\nimport Plane from \"components/effects/plane/Plane.js\";\nimport Colors from 'components/Colors.js';\nimport CirklonEditor from \"components/cirklon/CirklonEditor.js\";\nimport StickyLogo from \"components/landing/StickyLogo.js\";\nimport Grids from './Grids.js';\nimport {connect} from 'react-redux';\nimport SaveButton from './SaveButton.js';\nimport CombineButton from './CombineButton.js';\n\nconst colors = new Colors();\n\nconst ExploreWork = ({work, sequencerEngine}) => { \n    let [toggled, setToggled] = useState(false);\n    let [selectedTrack, setSelectedTrack] = useState(undefined);\n    let _sequencerEngine = sequencerEngine.idToSequencerEngine[work.newSequence];\n    if (!_sequencerEngine) {\n        return '';\n    }\n    useEffect(() => {\n        if (!toggled) {\n            setSelectedTrack(undefined);\n        }\n    }, [toggled, setSelectedTrack]);\n\n    return (\n        <div className=\"explore-work\">\n          {toggled && selectedTrack ?\n           <CirklonEditor color={colors.getColorForTrack(selectedTrack)} track={selectedTrack}/> : \n           _sequencerEngine.subSequences.map(\n               subSequence => \n                   <Grids\n                     isExplore={true}\n                     setSelectedTrack={setSelectedTrack} toggled={toggled} subSequence={subSequence} sequencerEngine={_sequencerEngine}/>)}\n          <StickyLogo setToggled={setToggled} toggled={toggled}/>\n          <CombineButton multiSequencerEngine={sequencerEngine} sequencerEngine={_sequencerEngine}/>\n          <SaveButton sequencerEngine={_sequencerEngine}/>\n        </div>);\n};\n\nconst mapStateToProps = (state, props) => {\n    let _sequencerEngine = props.sequencerEngine.idToSequencerEngine[props.work.newSequence];\n    if (!_sequencerEngine) {\n        return {};\n    }\n    return {\n        worksLoaded: state.explore.worksLoaded,\n        numSubSequences: _sequencerEngine && _sequencerEngine.subSequences.length,\n        pulledEffects: state.effects.pulledEffects,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExploreWork);\n","import React, { useEffect, useCallback, useState} from 'react';\nimport accounts from 'accounts/Accounts.js';\nimport {connect} from 'react-redux';\n\nconst PendingComments = ({pendingComments}) => { \n    let [userName, setUserName] = useState('');\n\n    useEffect(() => {\n        accounts.getUserName()\n            .then(setUserName);\n    }, [setUserName]);\n    let _pendingComments = [... pendingComments];\n    _pendingComments.reverse();\n    return _pendingComments.map(\n        content => \n            <div>\n              <div\n                className=\"annotation\">\n                <div className=\"author\">\n                  {userName}: \n                </div>\n                <div className=\"content\">\n                  {content}\n                </div>\n              </div>\n            </div>\n    );\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PendingComments);\n","import React, {useEffect, useState, useCallback} from 'react';\nimport Colors from 'components/Colors.js';\nimport ipfs from 'decentralized/Ipfs.js';\nimport ethereum from 'decentralized/ethereum.js';\nimport {web3} from 'decentralized/web3.js';\nimport {bytes32ToIPFSHash, ipfsHashToBytes32} from 'utils/ipfsHash.js';\nimport {SEQUENCE_ANNOTATION} from 'constants/annotation-types.js';\nimport {connect} from 'react-redux';\n\nconst colors = new Colors();\nconst contentCache = {};\n\nconst Annotation = ({annotation, style}) => {\n    const [content, setContent] = useState('');\n    const [userName, setUserName] = useState('');\n\n    // the piece of data (i.e. project), this comment references,\n    // since it can be several\n    const [contentReferences, setContentReferences] = useState([]); \n\n    useEffect(() => {\n        let h = web3.utils.fromAscii(annotation.annotationData);\n        let hash = bytes32ToIPFSHash(h);\n        if (contentCache[hash]) {\n            setContent(contentCache[hash]);\n        } else {\n            ipfs.getJson(hash)\n                .then(s => {\n                    contentCache[hash] = s;\n                    setContent(s);\n                });\n        }\n\n        ethereum.users.getUserName(annotation.address)\n            .then(n => setUserName(n));\n\n    }, [annotation, setContent, setUserName]);\n\n    useEffect(() => {\n        ethereum.xanadu.getContentReferences(annotation.annotationData)\n            .then(setContentReferences);\n    }, [annotation, setContentReferences]);\n\n    return (\n        <div\n          style={style}\n          className=\"annotation\">\n          <div className=\"author\">\n            {userName}: \n          </div>\n          <div className=\"content\">\n            {content}\n          </div>\n          <div className=\"references\">\n            {contentReferences.map(\n                x =>\n                    <div\n                      style={{\n                          backgroundColor: colors.getColorForHash(x)\n                      }}\n                      className=\"dot content-reference\"/>)}\n          </div>\n        </div>\n    );\n};\n\nexport default Annotation;\n","import {useEffect, useState} from 'react';\nimport {SEQUENCE_ANNOTATION} from 'constants/annotation-types.js';\nimport ethereum from 'decentralized/ethereum.js';\n\nexport const useComments = ({\n    works,\n    linkType=SEQUENCE_ANNOTATION,\n}) => {\n    const [comments, setComments] = useState([]);\n    useEffect(() => {\n        ethereum.xanadu.getFlattenedAnnotations(\n            linkType,\n            ... works.map(x => x.newSequence))\n            .then(a => {\n                setComments([...a]);\n            });\n    }, [works, setComments]);\n\n    return {comments};\n};\n","import React, { useEffect, useCallback, useState} from 'react';\nimport Annotation from '../links/Annotation.js';\nimport Colors from 'components/Colors.js';\nimport {connect} from 'react-redux';\nimport {SEQUENCE_ANNOTATION} from 'constants/annotation-types.js';\nimport {useComments} from './useComments.js';\nimport PulseLoader from 'react-spinners/PulseLoader'\nimport ipfs from 'decentralized/Ipfs.js';\nimport ethereum from 'decentralized/ethereum.js';\n\nconst colors = new Colors();\n\nconst Comments = ({\n    works,\n    linkType=SEQUENCE_ANNOTATION,\n}) => { \n    const {comments} = useComments({works, linkType});\n    let style = {\n    };\n\n    comments.reverse();\n    return (\n        <div>\n          {comments.map(\n                a =>\n                    <Annotation\n                      style={style}\n                      key={a.annotationData}\n                      annotation={a}/>)}\n        </div>\n    );\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Comments);\n","import React, { useEffect, useCallback, useState} from 'react';\nimport PendingComments from './PendingComments.js';\nimport {SEQUENCE_ANNOTATION} from 'constants/annotation-types.js';\nimport Comments from './Comments.js';\nimport ethereum from 'decentralized/ethereum.js';\nimport { Button, InputGroup, InputGroupAddon, InputGroupText, Input } from 'reactstrap';\nimport Colors from 'components/Colors.js';\nimport {connect} from 'react-redux';\n\nconst colors = new Colors();\n\nconst CommentsPane = ({\n    worksLoaded,\n    linkType=SEQUENCE_ANNOTATION\n}) => { \n    const [comment, setComment] = useState('');\n    const [pendingComments, setPendingComments] = useState([]);\n\n    useEffect(() => {\n        setPendingComments([]);\n    }, [worksLoaded]);\n\n    const submit = useCallback(() => {\n        worksLoaded.map(\n            ({newSequence}) =>\n                ethereum.xanadu.newAnnotationContent(\n                    linkType,\n                    newSequence,\n                    comment));\n\n        setComment('');\n        setPendingComments([\n            ... pendingComments,\n            comment\n        ]);\n    }, [\n        worksLoaded,\n        comment,\n        setComment,\n        pendingComments,\n        setPendingComments\n    ]);\n\n\n    if (worksLoaded.length === 0) {\n        return [];\n    }\n\n    return (\n        <div className=\"comments-pane\">\n          <div className=\"work-comments\">\n            <Comments works={worksLoaded}/>\n            <PendingComments pendingComments={pendingComments}/>\n          </div>\n          <Input\n            type=\"textarea\"\n            value={comment}\n            className=\"comment-text\"\n            placeholder=\"Write a comment here\"\n            onChange={(e) => setComment(e.target.value)}/>\n          <div\n            onClick={submit}\n            className={\n                comment === \"\" ?\n                    \"submit-comment-btn disabled\" :\n                    \"submit-comment-btn\"}>\n            Send\n          </div>\n        </div>\n    );\n}\n\nconst WorksInfo = ({worksLoaded}) => {\n    return (\n        <div className=\"works-info\">\n          {worksLoaded.map(\n              work =>\n                  <div className=\"work-info\">\n                    <div\n                      className=\"dot\"\n                      style={{\n                        backgroundColor: colors.getColorForHash(work.newSequence)\n                    }}/>\n                    {work.title}\n                  </div>)}\n        </div>\n    );\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n      worksLoaded: state.explore.worksLoaded\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CommentsPane);\n","import EthereumTransaction from 'decentralized/transactions/EthereumTransaction.js';\nimport {\n    ListEdited,\n    ListDeleted\n} from 'decentralized/EthereumEvents.js';\nimport ExploreListsContract from 'decentralized/contracts/ExploreListsContract.js';\nimport BackendQuery from 'decentralized/BackendQuery.js';\nimport {web3} from 'decentralized/web3.js';\nimport {ipfsHashToBytes32} from 'utils/ipfsHash.js';\nimport {EXPLORE_LISTS} from 'decentralized/transactions/contracts.js';\n\nconst CONTRACT_ADDRESS = new ExploreListsContract().contractAddress;\n\nconst NULL_BYTES32 = web3.utils.padLeft('0x0', 64);\n\nconst QUERY = () => new BackendQuery(CONTRACT_ADDRESS);\n\nexport const deleteList = async (content) => {\n    await new EthereumTransaction(\n        EXPLORE_LISTS,\n        'deleteList',\n        [\n            ipfsHashToBytes32(content),\n        ])\n        .execute();\n};\n\nexport const publishBulk = async (newContents, oldContents, titles, guildIds) => {\n    await new EthereumTransaction(\n        EXPLORE_LISTS,\n        'bulkEdit',\n        [\n            newContents.map(hash => ipfsHashToBytes32(hash)),\n            oldContents.map(hash => hash ? ipfsHashToBytes32(hash) : NULL_BYTES32),\n            titles.map(title => web3.utils.fromAscii(title)),\n            guildIds\n        ])\n        .execute();\n};\n\nexport const getLists = async () => {\n    let query = QUERY()\n        .from(ListEdited)\n        .select(\"newContent\")\n        .select(\"previousContent\")\n        .select(\"title\");\n\n    return await filterDeletedLists(getLatestLists(await query.executeQuery()));\n};\n\nconst filterDeletedLists = async (lists) => {\n    let ids = lists.map(x => x.newContent);\n\n    let query = QUERY()\n        .from(ListDeleted)\n        .select(\"contentHash\");\n\n    let deleted = new Set(\n        (await query.executeQuery())\n            .map(x => x.contentHash));\n\n    return lists.filter(\n        x => /*!deleted.has(x.previousContent) && */ !deleted.has(x.newContent));\n};\n\nconst getLatestLists = (lists) => {\n    let newToPrev = {};\n    for (let list of lists) {\n        if (list.previousContent && list.previousContent !== list.newContent) {\n            newToPrev[list.newContent] = list.previousContent;\n        }\n    }\n\n    let rootToLists = {};\n    for (let list of lists) {\n        let root = getRoot(list.newContent, newToPrev);\n        if (! (root in rootToLists)) {\n            rootToLists[root] = [];\n        }\n        rootToLists[root].push(list);\n    }\n\n    let latest = [];\n    for (let root in rootToLists) {\n        rootToLists[root].sort((a,b) => b.blockNumber - a.blockNumber);\n        latest.push(rootToLists[root][0]);\n    }\n    return latest;\n};\n\nconst getRoot = (hash, newToPrev) => {\n    let prev = newToPrev[hash];\n    if (prev === undefined) {\n        return hash;\n    }\n    return getRoot(prev, newToPrev);\n};\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {lstorage} from 'utils/lstorage.js';\nimport ipfs from 'decentralized/Ipfs.js';\nimport {publishBulk} from 'decentralized/lists/ExploreLists.js';\nimport {setExploreUnpublished} from 'actions/index.js';\nimport {connect} from 'react-redux';\n\nconst Publish = ({setExploreUnpublished, unpublished}) => { \n\n    useEffect(() => {\n        let _unpublished = lstorage.getItem(\"unsavedLists\");\n        if (!_unpublished) {\n            return;\n        }\n        setExploreUnpublished(JSON.parse(_unpublished));\n    }, []);\n\n    const publishChanges = useCallback(async () => {\n        let newContents = [];\n        let oldContents = [];\n        let titles = [];\n        let guildIds = [];\n        for (let change of unpublished) {\n            let hash = await ipfs.addJson(change);\n            let oldHash = change.hash;\n            change.hash = hash;\n            change.newContent = hash;\n            newContents.push(hash);\n            oldContents.push(oldHash);\n            titles.push(change.name);\n            guildIds.push(0);\n        }\n        lstorage.setItem(\"publishingLists\", JSON.stringify(unpublished));\n        lstorage.removeItem(\"unsavedLists\");\n        publishBulk(newContents, oldContents, titles, guildIds);\n        setExploreUnpublished(undefined);\n    }, [unpublished]);\n\n    if (!unpublished || unpublished.length === 0) {\n        return (<div></div>);\n    }\n\n    return (\n        <div\n          onClick={publishChanges}\n          className=\"save-unpublished-btn\">\n          Publish Changes <span className=\"unpublished-count\">{unpublished.length}</span>\n        </div>);\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n      unpublished: state.explore.unpublished\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n      setExploreUnpublished: (x) => dispatch(setExploreUnpublished(x))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Publish);\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {lstorage} from 'utils/lstorage.js';\nimport {uuid} from 'uuidv4';\nimport ipfs from 'decentralized/Ipfs.js';\nimport ImageHandler from './ImageHandler.js';\nimport {setProjectDragging} from 'actions/index.js';\nimport {setExploreUnpublished} from 'actions/index.js';\nimport {connect} from 'react-redux';\n\nconst EditList = ({hide, projectDragging, setProjectDragging, list, setExploreUnpublished, onDelete}) => { \n    const [name, setName] = useState('');\n    const [projects, setProjects] = useState([]);\n    const [imageHash, setImageHash] = useState(undefined);\n    const [trackDragging, setTrackDragging] = useState(undefined);\n\n    useEffect(() => {\n        if (list) {\n            setProjects(list.projects);\n            setName(list.name);\n            setImageHash(list.image);\n        }\n    }, [list]);\n\n    const onDrop = useCallback((e) => {\n        if (projectDragging) {\n            setProjects([... projects, projectDragging]);\n            setProjectDragging(undefined);\n        }\n    }, [projectDragging, projects, setProjects]);\n\n    const onOrderChangeDrop = useCallback((destinationTrack) => {\n        if (!trackDragging) {\n            return;\n        }\n\n        let from = projects.indexOf(trackDragging);\n        let _projects = [... projects];\n        _projects.splice(from, 1);\n        let to = _projects.indexOf(destinationTrack);\n        _projects = [\n            ... _projects.slice(0, to),\n            trackDragging,\n            ... _projects.slice(to)\n        ];\n        setTrackDragging(undefined);\n        setProjects(_projects);\n    }, [trackDragging, setProjects, projects, setTrackDragging]); \n\n    const deleteProject = useCallback((project) => {\n        let index = projects.indexOf(project);\n        let _projects = [... projects];\n        _projects.splice(index, 1);\n        setProjects(_projects);\n    }, [projects, setProjects]);\n\n    const onSave = useCallback(async () => {\n        let json = {\n            name,\n            title: name,\n            projects,\n            image: imageHash,\n            id: uuid()\n        };\n        if (list) {\n            json.hash = list.newContent;\n            json.newContent = list.newContent;\n        }\n        let lists = lstorage.getItem(\"unsavedLists\");\n        if (lists) {\n            lists = JSON.parse(lists);\n        } else {\n            lists = [];\n        }\n        if (list && lists.length > 0) {\n            // then replace\n            for (let i in lists) {\n                let _list = lists[i];\n                if (_list.name === list.name || (list.hash && _list.hash === list.hash)) {\n                    lists[i] = json;\n                    break;\n                }\n            }\n        } else {\n            lists.push(json);\n        }\n        let unpublishedChanges = JSON.stringify(lists);\n        lstorage.setItem(\"unsavedLists\", unpublishedChanges);\n        setExploreUnpublished(lists);\n        hide(json);\n    }, [name, projects, imageHash, hide, list]);\n\n    return (\n        <div\n          className=\"new-list\">\n          <div\n            onDrop={onDrop}\n            onDragOver={(e) => e.preventDefault()}\n            className=\"inner\">\n            <input\n              placeholder=\"Type name for list\"\n              value={name}\n              onChange={e => setName(e.target.value)}\n              type=\"text\"/>\n            <div className=\"projects\">\n              {projects.map(\n                  x =>\n                      <div\n                        key={x.newSequence}\n                        onDrop={() => onOrderChangeDrop(x)}\n                        onDragOver={(e) => e.preventDefault()}\n                        onDragStart={() => setTrackDragging(x)}\n                        draggable={true}\n                        className=\"project\">\n                        <div className=\"project-name\">{x.title}</div>\n                        <div onClick={() => deleteProject(x)} className=\"delete-btn\">x</div>\n                      </div>)}\n            </div>\n            <div\n              className=\"drop-here\">\n              <span>\n                Drop projects here\n              </span>\n            </div>\n            <div className=\"btns\">\n              <div onClick={onSave} className=\"done-btn\">\n                Done\n              </div>\n              <div onClick={() => hide()} className=\"cancel-btn\">\n                Cancel \n              </div>\n           </div>\n          </div>\n          <div className=\"inner\">\n            <ImageHandler imageHash={imageHash} setImageHash={setImageHash}/>\n            {list ?\n             <div onClick={() => {\n                 if (window.confirm(\"Confirm delete\")) onDelete();\n             }} className=\"delete-list-btn\">\n               Delete List\n             </div> : ''}\n \n         </div>\n        </div>);\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n      projectDragging: state.explore.projectDragging\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n      setProjectDragging: (x) => dispatch(setProjectDragging(x)),\n      setExploreUnpublished: (x) => dispatch(setExploreUnpublished(x))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditList);\n","import React, { useEffect, useCallback, useState} from 'react';\nimport accounts from 'accounts/Accounts.js';\nimport EditList from './EditList.js';\nimport ipfs from 'decentralized/Ipfs.js';\nimport {connect} from 'react-redux';\n\nconst List = (props) => { \n    const {loadWork} = props;\n    const [isEditable, setIsEditable] = useState(false);\n    const [isEditing, setIsEditing] = useState(false);\n    const [list, setList] = useState({... props.list});\n\n    let style = {\n        backgroundImage: \"url(\" + ipfs.getHashUrl(list.image) + \")\"\n    };\n\n    useEffect(() => {\n        accounts.getAccount().then(\n            user => {\n                if (!user) {\n                    return;\n                }\n                if (list.user) {\n                    setIsEditable(user.toLowerCase() === list.user.toLowerCase());\n                } else {\n                    setIsEditable(true);\n                }\n            });\n    }, [setIsEditable]);\n\n    const doneEditing = useCallback((list) => {\n        if (list) {\n            setList(list);\n            props.onListChanged(list);\n        }\n        setIsEditing(false);\n    }, [setList, setIsEditing]);\n\n    const getClassName = useCallback((work) => {\n        let className = \"project\";\n        if (props.worksLoaded.some(x => x.newSequence === work.newSequence)) {\n            className += \" loaded\";\n        }\n        return className;\n    }, [props.worksLoaded]);\n\n    useEffect(() => {\n        if (props.list.projects[0] && props.worksLoaded.length === 0) {\n            loadWork(list.projects[0]);\n        }\n    }, []);\n\n    if (isEditing) {\n        return (\n            <EditList onDelete={props.onDelete} list={list} hide={doneEditing}/>\n        );\n    }\n\n\n    return (\n        <div style={style} className=\"list\">\n          {isEditable ? <div onClick={() => setIsEditing(true)} className=\"edit-button\">Edit</div> : ''}\n          <div className=\"projects\">\n            {list.projects.map(\n                x =>\n                    <div\n                      onClick={() => loadWork(x)}\n                      className={getClassName(x)}>\n                      {x.title}\n                    </div>)}\n          </div>\n          <div className=\"list-title\">{list.name}</div>\n          <div onClick={props.removeList} className=\"delete-btn\">x</div>\n        </div>);\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n      worksLoaded: state.explore.worksLoaded\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(List);\n","import React, { useEffect, useCallback, useState} from 'react';\nimport Publish from './Publish.js';\nimport List from './List.js';\nimport EditList from './EditList.js';\nimport {connect} from 'react-redux';\nimport '../../../ExploreList.scss';\n\nconst ListsView = ({creatingNewList, lists, hide, loadWork, removeList, onListChanged}) => { \n    return (\n        <div className=\"lists-container\">\n          {lists.map(\n              (list, i) =>\n                  <List\n                    onListChanged={onListChanged}\n                    onDelete={() => {\n                        onListChanged(list, true);\n                        removeList(list);\n                    }}\n                    removeList={() => removeList(list)}\n                    key={list.name} loadWork={loadWork} list={list}/>)}\n          {creatingNewList ?\n           <EditList hide={onListChanged}/> :\n           ''\n          }\n          <Publish/>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListsView);\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {setExplorePersonSelected} from 'actions/index.js';\nimport ethereum from \"decentralized/ethereum.js\";\nimport {connect} from 'react-redux';\nimport { ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\n\nconst ExploreToolbar = ({\n    onNewList,\n    personSelected,\n    setPersonSelected,\n    children\n}) => { \n    let [userName, setUserName] = useState(undefined);\n    let [toggled, setToggled] = useState(false);\n    useEffect(() => {\n        if (!personSelected) {\n            setUserName(undefined);\n        } else {\n            ethereum.users.getUserName(personSelected).then(\n                setUserName);\n        }\n    }, [personSelected, setUserName]);\n    return (\n        <div className=\"explore-toolbar\">\n          <div className=\"toolbar-btn\">\n            <ButtonDropdown\n              className=\"view-dropdown\"\n              show={toggled ? \"true\" : \"false\"}\n              isOpen={toggled}\n              toggle={() => setToggled(!toggled)}>\n              <DropdownToggle size=\"sm\" caret color=\"primary\">\n                <img className=\"explore-commands-icon\" src=\"/automation-icon-disabled.png\"/>\n              </DropdownToggle>\n              <DropdownMenu>\n                <DropdownItem\n                  onClick={onNewList}\n                  key=\"\"\n                  size=\"sm\">\n                  New List\n                </DropdownItem>\n              </DropdownMenu>\n            </ButtonDropdown>\n          </div>\n          {userName ? <div onClick={() => setPersonSelected(undefined)}\n                           className=\"user-selected\">{userName}</div> : ''}\n          {children}\n        </div>);\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n      personSelected: state.explore.personSelected\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n      setPersonSelected : id => dispatch(setExplorePersonSelected(id))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExploreToolbar);\n","import React, {useRef, useCallback, useState, useEffect} from 'react';\nimport {SEQUENCE_TAG} from 'constants/annotation-types.js';\nimport ethereum from 'decentralized/ethereum.js';\n\nexport const useTags = ({work, numPending}) => {\n\n    const [tags, setTags] = useState([]);\n\n    useEffect(() => {\n        if (!work) {\n            return;\n        }\n        ethereum.xanadu.getAnnotations(SEQUENCE_TAG, work.newSequence)\n            .then(x => \n                setTags(Array.from(new Set(x.map(a => a.annotationData))))\n                 );\n    }, [setTags, work]);\n\n    const newTag = useCallback((text) => {\n        if (text.trim() === \"\") {\n            return;\n        }\n        ethereum.xanadu.newAnnotation(SEQUENCE_TAG, work.newSequence, text);\n        setTags([... tags, text]);\n    }, [work, tags, setTags]);\n    \n    return {newTag, tags, setTags};\n};\n","import React, {useRef, useCallback, useState, useEffect} from 'react';\nimport {useTags} from './useTags.js';\nimport {SEQUENCE_TAG} from 'constants/annotation-types.js';\nimport ethereum from 'decentralized/ethereum.js';\nimport PulseLoader from 'react-spinners/PulseLoader'\nimport {connect} from 'react-redux';\n\nconst TagEditor = ({work}) => {\n    const [text, setText] = useState('');\n    const ref = useRef(undefined);\n    const {newTag, setTags, tags} = useTags({work});\n\n    const onChange = useCallback((e) => {\n        setText(e.target.value);\n    }, [setText]);\n\n    useEffect(() => {\n        if (ref.current) {\n            ref.current.focus();\n        }\n    }, []);\n\n    const tag = useCallback(() => {\n        newTag(text);\n        setText('');\n    }, [setText, text, tags, work, setTags]);\n\n    return (\n        <div className=\"tags-editor\">\n          <div className=\"input-container\">\n            <input\n              ref={ref}\n              placeholder=\"Type tag here\"\n              className=\"tags-input\" type=\"text\" onChange={onChange} value={text}/>\n            <div\n              onClick={tag}\n              className=\"tag-button\">\n              Tag\n            </div>\n          </div>\n          <div className=\"work-tags\">\n            {tags.map(x => <div className=\"work-tag\">{x}</div>)}\n          </div>\n        </div>\n    );\n};\n\nexport default connect(null, null)(TagEditor);\n\n","import React, {useEffect, useState} from 'react';\nimport ethereum from 'decentralized/ethereum.js';\nimport {connect} from 'react-redux';\n\nconst SequenceEdits = ({work, allSequences}) => {\n    const [edits, setEdits] = useState([]);\n\n    useEffect(() => {\n        let e = ethereum.getEditsForSequence(work.newSequence, allSequences);\n        console.log('edits = ', e);\n        setEdits(e);\n    }, [setEdits, work, allSequences]);\n\n    const createNewEdit = () => {\n        window.open(\"/create/\" + work.newSequence);\n    };\n\n    return (\n        <div>\n          <div className=\"sequence-edits\">\n            {edits.map(\n                e =>\n                    <SequenceEdit edit={e}/>)}\n         </div>\n          <div\n            onClick={createNewEdit}\n            className=\"new-edit-button\">\n            Create New Edit\n          </div>\n        </div>\n    );\n};\n\nconst SequenceEdit = ({edit}) => {\n    const [userName, setUserName] = useState('');\n    const [date, setDate] = useState('');\n\n    useEffect(() => {\n        ethereum.users.getUserName(edit.user).then(\n            name => setUserName(name));\n    }, [edit, setUserName]);\n\n    useEffect(() => {\n        ethereum.getBlockDate(edit.blockNumber)\n            .then(d => setDate(d.toISOString().substring(0,10)));\n    }, [setDate, edit]);\n\n    return (\n        <div className=\"sequence-edit\">\n          <div className=\"title\">\n            {edit.title} -  \n          </div>\n          <div className=\"author\">\n            {userName}\n          </div>\n          <div className=\"date\">\n            {date}\n          </div>\n        </div>\n    );\n};\n\n\nconst mapStateToProps = (state, props) => {\n    return {\n        allSequences: state.explore.allSequences\n    };\n};\n\nexport default connect(mapStateToProps, null)(SequenceEdits);\n","import React, {useState, useCallback} from 'react';\nimport TagEditor from './TagEditor.js';\nimport SequenceEdits from './SequenceEdits.js';\nimport AnnotationEditor from './AnnotationEdit.js';\nimport { Input } from 'reactstrap';\nimport '../../../Annotations.scss';\n\nconst NAMES = {\n    ANNOTATION: 'Annotations',\n    TAGS: 'Tags',\n    EDITS: 'Edits',\n};\n\nexport default ({annotationsView}) => {\n    if (!annotationsView) {\n        return (\n            <div>\n            </div>\n        );\n    }\n\n    let links = [\"ANNOTATION\", \"TAGS\", \"EDITS\"];\n\n    return (\n        <div>\n        <LinkType annotationsView={annotationsView} linkType={links[0]} linkNumber={0}>\n          <AnnotationEditor work={annotationsView}/>\n        </LinkType>\n        <LinkType annotationsView={annotationsView} linkType={links[1]} linkNumber={1}>\n          <TagEditor work={annotationsView}/>\n        </LinkType>\n        <LinkType annotationsView={annotationsView} linkType={links[2]} linkNumber={2}>\n          <SequenceEdits work={annotationsView}/>\n        </LinkType>\n        </div>\n    );\n};\n\nconst LinkType = ({annotationsView, linkNumber, linkType, children}) => {\n    let {workNumber} = annotationsView;\n    let boxX = 110;\n    let x = 210 + workNumber * 250;\n    let style = {\n        left: boxX + 20  + linkNumber*220\n    };\n\n    let points = [\n        x, 0, // top of triangle\n        boxX + 20 + linkNumber * 220, 80, // bottom left of triangle\n        boxX + 220 + linkNumber * 220, 80 // bottom right of triangle\n    ];\n\n    console.log('points = ', points, annotationsView);\n    return (\n        <div>\n          <svg\n            className={\"annotations-svg \" + linkType}\n            height=\"80\" width=\"1000\">\n            <polygon points={points}/>\n          </svg>\n          <div style={style} className={\"annotations-view \" + linkType}>\n            {children}\n          </div>\n        </div>\n    );\n};\n\n","import React, {useState, useCallback} from 'react';\n\nlet id = 0;\nconst TIMEOUT = 750;\n\nconst ExploreSearch = ({\n    searchTerm,\n    setSearchTerm,\n    setSearchOptions,\n    searchOptions,\n    setSearchTag,\n    searchTag\n}) => {\n    const [text, setText] = useState('');\n\n    const onChange = useCallback((e) => {\n        let i = ++id;\n        let t = e.target.value;\n        setTimeout(() => {\n            if (id === i) {\n                setSearchTerm(t);\n                if (searchOptions.includes(\"Starred\") || searchOptions.includes(\"Favorited\")) {\n                    setSearchOptions(searchOptions.filter(\n                        x => x !== \"Starred\" && x !== \"Favorited\"));\n                }\n            }\n        }, TIMEOUT);\n        setText(e.target.value);\n   }, [setText, setSearchTerm, searchOptions, setSearchOptions]);\n\n    const onClickOption = useCallback((opt) => {\n        if (searchOptions.indexOf(opt) == -1) {\n            if (opt === \"Lists\" || opt === \"Projects\") {\n                setSearchOptions([opt]);\n            } else {\n                setSearchOptions([opt, ...searchOptions]);\n            }\n        } else {\n            let options = searchOptions.filter(o => o !== opt);\n            console.log('setting search options = ', options);\n            setSearchOptions(options);\n        }\n    }, [searchOptions, setSearchOptions]);\n\n    return (\n        <div className=\"explore-search-container\">\n          {searchTag ? <div onClick={() => setSearchTag(undefined)} className=\"search-tag\">{searchTag}</div> : ''}\n          <div className=\"heart-and-soul\">\n            <SearchOption\n              hideText={true}\n              baseClass=\"heart\"\n              selectedClass=\"favorited\"\n              onClickOption={onClickOption}\n              searchOptions={searchOptions} option=\"Favorited\"/>\n            <div></div>\n            <SearchOption\n              baseClass=\"star\"\n              selectedClass=\"starred\"\n              onClickOption={onClickOption}\n              searchOptions={searchOptions} option=\"Starred\"/>\n          </div>\n          <SearchOption\n            onClickOption={onClickOption}\n            searchOptions={searchOptions} option=\"Lists\"/>\n          <SearchOption\n            onClickOption={onClickOption}\n            searchOptions={searchOptions} option=\"Projects\"/>\n          <input\n            type=\"text\"\n            value={text} onChange={onChange}\n            className=\"explore-search\"\n            placeholder=\"Type to search\"/>\n          <div onClick={() => {\n              setSearchTerm(\"\");\n              setText(\"\");\n              setSearchTag(undefined);\n          }} className=\"search-clear-btn\">x</div>\n        </div>\n    );\n};\n\nconst SearchOption = ({hideText, searchOptions, option, onClickOption, baseClass=\"search-option\", selectedClass=\"selected\"}) => {\n    return (\n        <div\n          onClick={() => onClickOption(option)}\n          className={\n            searchOptions.indexOf(option) > -1 ?\n                baseClass + \" \" + selectedClass : baseClass}>\n          {hideText ? '' : option === \"Starred\" ? <span>&#9734;</span> : option }\n        </div>\n    );\n};\n\nexport default ExploreSearch;\n","import ipfs from 'decentralized/Ipfs.js';\nimport {setExploreMixLoaded} from 'actions/index.js';\nimport {sleep} from 'utils/sleep.js';\nimport accounts from 'accounts/Accounts.js';\nimport {MIX} from 'decentralized/transactions/contracts.js';\nimport EthereumTransaction from 'decentralized/transactions/EthereumTransaction.js';\nimport {ipfsHashToBytes32} from 'utils/ipfsHash.js';\nimport {web3} from 'decentralized/web3.js';\n\nexport default superclass => class extends superclass  {\n    async saveMix(title, previousHash) {\n\n        let json = {\n            title: title,\n            user: await accounts.getAccount(),\n            events: this.events,\n            works: this.worksLoaded,\n            initialState: this.initialState\n        };\n\n        if (previousHash === undefined) {\n            previousHash = web3.utils.padLeft('0x0', 64);\n        } else {\n            previousHash = ipfsHashToBytes32(previousHash);\n        }\n\n        let hash = await ipfs.addJson(json);\n        let works = this.worksLoaded.map(x => ipfsHashToBytes32(x.newSequence));\n\n        new EthereumTransaction(\n            MIX, 'newMix', [ipfsHashToBytes32(hash), previousHash, title, works, 0]).\n            execute();\n        return json;\n    }\n\n    async loadMix(mix) {\n        console.log('LOAD MIX CALLED!');\n        this.unloadAll();\n\n        this.events = mix.events;\n        this.initialState = mix.initialState || {\n            worksLoaded: mix.works\n        };\n\n        this.store.dispatch(setExploreMixLoaded(mix));\n\n        console.log('mix loaded =', mix);\n        let worksToLoad = Array.from(new Set(\n            [... this.initialState.worksLoaded, ...mix.works]));\n\n        for (let i in worksToLoad) {\n            console.log('loading work =', worksToLoad[i]);\n            await this.loadWork(worksToLoad[i]);\n        }\n    }\n\n    clearMix() {\n        this.clearScheduledEvents();\n        this.initialState = undefined;\n        this.events = [];\n        this.store.dispatch(setExploreMixLoaded(undefined));\n   }\n}\n","import MultiMix from './MultiMix.js';\nimport Savable from './Savable.js';\nimport MultiSequencerEngine from '../MultiSequencerEngine.js';\n\nclass MixableSequencerEngine extends Savable(MultiMix(MultiSequencerEngine)) {\n}\n\nexport default MixableSequencerEngine;\n","import SettingsModal from \"components/modals/SettingsModal.js\"\nimport React, {useState} from 'react';\nimport accounts from 'accounts/Accounts.js';\nimport {connect} from 'react-redux';\nimport ExploreSearch from  './ExploreSearch.js';\nimport LoginModal from 'components/modals/LoginModal.js';\nimport TransactionsView from 'components/toolbar/TransactionsView.js';\nimport GuildsMenu from 'components/guilds/GuildsMenu.js';\nimport {setExploreOption} from 'actions/index.js';\nimport {HOME, GUILDS, MESSAGES} from 'constants/explore-options.js';\n\nconst Navigation = ({\n    setSearchTerm,\n    searchTerm,\n    store,\n    showLogin,\n    option,\n    setOption,\n    searchOptions,\n    setSearchOptions,\n}) => {\n    let [showPreferences, setShowPreferences] = useState(false);\n    let loggedIn = accounts.isLoggedIn();\n    let className = \"navigation\";\n    if (!loggedIn) {\n        className += \" logged-off\";\n    }\n\n    return (\n        <div className={className}>\n          <Option name=\"Home\" option={HOME} selected={option === HOME} onClick={setOption}/>\n          <Option name=\"Guilds\" option={GUILDS} selected={option === GUILDS} onClick={setOption}/>\n          <Option name=\"Messages\" option={MESSAGES} selected={option === MESSAGES} onClick={setOption}/>\n          <div\n            onClick={() => setShowPreferences(true)}\n            className=\"preferences-btn\">Preferences</div>\n          <GuildsMenu store={store}/>\n          <TransactionsView/>\n          <LoginModal show={showLogin}/>\n          {showPreferences ? <SettingsModal hide={() => setShowPreferences(false)} onlyAppearance={true}/> : ''}\n        </div>\n    );\n}\n\nconst Option = ({name, option, selected, onClick}) => {\n    let className = \"option\";\n    if (selected) {\n        className += \" selected\";\n    }\n    return (\n        <div onClick={() => onClick(option)} className={className}>\n          {name}\n        </div>\n    );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setOption: (o) => dispatch(setExploreOption(o))\n    };\n};\nconst mapStateToProps = state => {\n    return {\n        selectedRecord: state.discover.selectedRecord,\n        selectedGuild: state.guilds.selectedGuild,\n        showLogin: state.sequencer.showLogin,\n        option: state.explore.exploreOption,\n        userToken: state.sequencer.userToken\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigation);\n\n","import React from 'react';\n\nexport default ({person, selected, onClick}) => {\n    let {userName, id} = person;\n    let className = selected ? \"person selected\" : \"person\";\n    return (\n        <div\n          onClick={onClick}\n          className={className}>\n          <div className=\"name\">\n            {userName || id}\n          </div>\n        </div>\n    );\n};\n","import ethereum from 'decentralized/ethereum.js';\nimport GetSequences from 'search/GetSequences.js';\n\nexport const fetchPeople = async (sequences) => {\n    return await getUsersFromResults(sequences);\n};\n\nconst getUsersFromResults = async (results) => {\n    let users = new Set();\n    for (let i in results) {\n        users.add(results[i].user);\n    }\n    \n    users = Array.from(new Set(users));\n    let people = [];\n    for (let i in users) {\n        let userId = users[i].trim();\n        let userName = await ethereum.users.getUserName(userId);\n        people.push({\n            id: userId,\n            userName\n        });\n    }\n    \n    return people;\n}\n\n\n","import React, {useEffect, useState, useCallback} from 'react';\nimport {setExplorePersonSelected} from 'actions/index.js';\nimport { connect } from \"react-redux\";\nimport Person from './Person.js';\nimport {fetchPeople} from './fetchPeople.js';\nimport ethereum from 'decentralized/ethereum.js';\n\nconst People = ({personSelected, setPersonSelected, allSequences}) => {\n    const [people, setPeople] = useState([]);\n\n    useEffect(() => {\n        fetchPeople(allSequences).then(\n            people => setPeople(people));\n    }, [setPeople, allSequences]);\n\n    let personSelectedComponent = '';\n    if (personSelected) {\n        personSelectedComponent = (\n            <Person\n              onClick={() => setPersonSelected(undefined)}\n              selected={true} person={personSelected}/>\n        );\n    }\n    return (\n        <div className=\"people\">\n          {personSelectedComponent}\n          <div className=\"people-to-choose\">\n            {people\n             .filter(person => !personSelected ||\n                     personSelected.id !== person.id)\n             .map(\n                person =>\n                    <Person\n                      onClick={() => setPersonSelected(person)}\n                      key={person.id}\n                      person={person}/>)}\n          </div>\n        </div>\n    );\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        setPersonSelected : id => dispatch(setExplorePersonSelected(id))\n    };\n};\n\nconst mapStateToProps = (state, props) => {\n    return {\n        personSelected: state.explore.personSelected,\n        allSequences: state.explore.allSequences\n    }\n};\n \nexport default connect(mapStateToProps, mapDispatchToProps)(People);\n\n\n","import ethereum from 'decentralized/ethereum.js';\nimport GetSequences from 'search/GetSequences.js';\nimport {getProjects} from 'components/sequences2/getProjects.js';\n\nexport const fetchSequences = async (starred, favorited, searchTerm, searchTag, guildId, personSelected) => {\n    return await getProjects(searchTerm, undefined, starred, favorited, searchTag, false, guildId, personSelected);\n};\n","import BackendQuery from 'decentralized/BackendQuery.js';\nimport {MIX} from './types.js';\nimport {NewMix} from 'decentralized/EthereumEvents.js';\nimport MixContract from 'decentralized/contracts/MixContract.js';\n\nexport const fetchMixes = async () => {\n    let query = new BackendQuery(new MixContract().contractAddress)\n        .from(NewMix)\n        .select(\"mixHash\")\n        .select(\"previousHash\")\n        .select(\"title\")\n        .select(\"user\");\n\n    let results = await query.executeQuery(false);\n    console.log('mix results =', results);\n    return results.map(\n        x => ({\n            ... x,\n            type: MIX\n        }));\n}\n","export const SAMPLES = 'SAMPLES';\nexport const SEQUENCE = 'SEQUENCE';\nexport const MIX = 'MIX';\nexport const LIST = 'LIST';\n","import {LIST} from './types.js';\nimport {lstorage} from 'utils/lstorage.js';\nimport {uuid} from 'uuidv4';\nimport ipfs from 'decentralized/Ipfs.js';\nimport {getLists} from 'decentralized/lists/ExploreLists.js';\n\nexport const fetchLists = async () => {\n    let fetched = await getLists();\n    let lists = [];\n    for (let list of fetched) {\n        // let _list = await ipfs.getJson(list.newContent);\n        lists.push({\n            ... list,\n            // ... _list,\n            hash: list.newContent,\n            tags: [],\n            type: LIST\n        });\n    }\n\n    let unsavedLists = lstorage.getItem(\"unsavedLists\");\n    if (!unsavedLists) {\n        return lists;\n    }\n    unsavedLists = JSON.parse(unsavedLists);\n\n    // we dont want to show any old lists that we have edits for\n    lists = lists.filter(\n        x => !unsavedLists.some(y => y.hash === x.hash));\n    return [\n        ... lists,\n        ... unsavedLists.map(\n            list => ({\n                ... list,\n                id: list.id !== undefined ? list.id : uuid(),\n                title: list.name,\n                unsaved: true,\n                tags: [],\n                blockNumber: 9999999999,\n                type: LIST\n            }))\n    ];\n}\n","import {fetchSequences} from './fetchSequences.js';\nimport accounts from \"accounts/Accounts.js\"\nimport {SAMPLES, SEQUENCE, MIX} from '../work/types.js';\nimport sequenceMetadata from \"decentralized/sequences/SequenceMetadata.js\";\nimport BackendQuery from 'decentralized/BackendQuery.js';\nimport GuildSamplesContract from 'decentralized/contracts/GuildSamplesContract.js';\nimport {fetchMixes} from './fetchMixes.js';\nimport {fetchLists} from './fetchLists.js';\nimport {SampleYoutube} from 'decentralized/EthereumEvents.js';\nimport {SampleTagged} from 'decentralized/EthereumEvents.js';\nimport {SampleCreated} from 'decentralized/EthereumEvents.js';\n\nconst contract = new GuildSamplesContract();\n\nexport const fetchWorks = async (setWorks, setIsFetching, searchOptions, searchTerm, searchTag, guildId, personSelected) => {\n    console.log(\"person selecred == \", personSelected);\n    let favorited = searchOptions.includes(\"Favorited\");\n    let starred = searchOptions.includes(\"Starred\");\n    let sequences =  (await fetchSequences(starred, favorited, searchTerm, searchTag, guildId, personSelected))\n          .map(s => ({\n              ... s,\n              type: SEQUENCE\n          }));\n\n    const mixes = await fetchMixes();\n    const lists = await fetchLists();\n    let list = [... lists, ...mixes, ... sequences];\n    list.sort((a, b) => b.blockNumber - a.blockNumber);\n    setWorks([...list]);\n    setIsFetching(false);\n}\n\nconst putSamplesIntoBuckets = (samplesFromVideos, allSamples, taggedSamples) => {\n    let sampleToTag = {};\n    taggedSamples.forEach(s => sampleToTag[s.ipfsHash] = [... (sampleToTag[s.ipfsHash] || []), s.tag]);\n\n    let buckets = {};\n    for (let i in allSamples) {\n        let sample = allSamples[i];\n        let {user, blockNumber} = sample;\n        let key = blockNumber;\n        if (buckets[key] === undefined) {\n            buckets[key] = [];\n        }\n        if (!buckets[key].some(s => s.ipfsHash === sample.ipfsHash)) {\n            buckets[key].push(sample);\n        }\n    }\n    for (let i in samplesFromVideos) {\n        let sample = samplesFromVideos[i];\n        let {user, blockNumber} = sample;\n        let key = blockNumber;\n        for (let j in buckets[key]) {\n            if (buckets[key][j].ipfsHash === sample.ipfsHash) {\n                buckets[key][j].videoId = sample.videoId;\n            }\n        }\n    }\n    let bucketedList = [];\n    for (let key in buckets) {\n        let {user, blockNumber} = buckets[key][0];\n        let obj = {\n            type: SAMPLES,\n            user,\n            blockNumber,\n            samples: buckets[key],\n            tags: [],\n        };\n        for (let i in buckets[key]) {\n            let tags = sampleToTag[buckets[key][i].ipfsHash] || [];\n            obj.tags = [... obj.tags, ... tags];\n        }\n        obj.tags = Array.from(new Set(obj.tags));\n        bucketedList.push(obj);\n    }\n    return bucketedList;\n};\n","import React, {useEffect, useState, useCallback} from 'react';\nimport ethereum from 'decentralized/ethereum.js';\nimport {connect} from 'react-redux';\n\nconst RecordedMix = ({sequencerEngine, exists, originalMix}) => {\n    const [saved, setSaved] = useState(undefined);\n    const [name, setName] = useState('');\n    const [author, setAuthor] = useState('');\n\n    const clear = useCallback(() => {\n        sequencerEngine.clearMix();\n        setSaved(undefined);\n    }, [setSaved]);\n\n    useEffect(() => {\n        if (originalMix) {\n            ethereum.users.getUserName(originalMix.user)\n                .then(name => setAuthor(name));\n        }\n    }, [originalMix]);\n\n    const save = useCallback(async () => {\n        let json = await sequencerEngine.saveMix(\n            originalMix ? originalMix.title : name,\n            originalMix && originalMix.mixHash);\n        setSaved(json);\n    }, [name, setSaved, originalMix]);\n\n    if (!exists) {\n        return [];\n    }\n\n    if (originalMix) {\n        return (\n            <div className=\"recorded-mix\">\n              <div className=\"edit-text\">\n                Edit of <span className=\"mix-title\">{originalMix.title}</span> by <span className=\"mix-author\">{author}</span>\n              </div>\n              <div className=\"buttons-container\">\n                {saved ?\n                 '' :\n                 <div\n                   onClick={save}\n                   className=\"save-mix-button\">\n                   Save\n                 </div>}\n                <div\n                  onClick={clear}\n                  className=\"clear-mix-button\">Clear</div>\n              </div>\n            </div>\n\n        );\n    }\n\n    return (\n        <div className=\"recorded-mix\">\n          <div className=\"mix-title\">\n            {saved === undefined ?\n             <input\n               placeholder=\"Enter mix name\"\n               className=\"mix-input\"\n               type=\"text\"\n               value={name}\n               onChange={(e) => setName(e.target.value)}/> :\n             <div>{saved.title}</div>}\n          </div>\n          <div className=\"buttons-container\">\n            {saved ?\n             '' :\n             <div\n               onClick={save}\n               className=\"save-mix-button\">\n               Save\n             </div>}\n            <div\n              onClick={clear}\n              className=\"clear-mix-button\">Clear</div>\n          </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state, props) => {\n    return {\n        exists: props.sequencerEngine.events.length > 0\n    };\n};\n\nexport default connect(mapStateToProps, null)(RecordedMix);\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport ReactBootstrapSlider from 'react-bootstrap-slider';\nimport {changeBPM} from 'engine/mix/actions.js';\n\nconst BpmSlider = ({bpm, sequencerEngine}) => {\n    return (\n        <div className=\"bpm-container\">\n          <div className=\"bpm-label\">BPM: {Math.round(bpm)}</div>\n          <ReactBootstrapSlider\n            value={bpm}\n            change={(e) => sequencerEngine.dispatch(changeBPM(e.target.value))}\n            step={1}\n            className=\"bpm-fader\"\n            max={250}\n            min={1}\n            orientation=\"horizontal\"\n            reversed={false}/>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state, props) => {\n    return {\n        bpm: state.user.bpm\n    };\n};\n\nexport default connect(mapStateToProps, null)(BpmSlider);\n\n\n","import React, {useCallback} from 'react';\nimport {setIsRecordingMix} from 'actions/index.js';\nimport {connect} from 'react-redux';\nimport PlayButton from 'components/user/PlayButton.js';\n\nconst MixButtons = ({sequencerEngine, isRecordingMix, playingMap, setRecordingExploreMix}) => {\n    let count = Object.keys(playingMap).filter(\n        id => playingMap[id]).length;\n    let isPlaying = count > 0;\n\n    const onClickRecord = useCallback(() => {\n        setRecordingExploreMix(!isRecordingMix);\n    }, [isRecordingMix, setRecordingExploreMix]);\n\n    const onClickPlay = useCallback((e) => {\n        sequencerEngine.playMix(!isPlaying);\n    }, [sequencerEngine, isPlaying]);\n\n    return (\n        <div className=\"work-mix-buttons\">\n          <PlayButton\n            isPlaying={isPlaying}\n            play={onClickPlay}/>\n          <div\n            onClick={onClickRecord}\n            className={isRecordingMix ? \"recording-dot\" : \"not-recording-dot\"}>\n          </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        playingMap: state.sequencer.isPlaying,\n        isRecordingMix: state.mix.isRecordingMix\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setRecordingExploreMix: (x) => dispatch(setIsRecordingMix(x))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MixButtons);\n\n","import React from 'react';\nimport BpmSlider from './BpmSlider.js';\nimport MixButtons from  './MixButtons.js';\nimport ClockComponent from 'components/toolbar/ClockComponent.js';\nimport RollButtons from './RollButtons.js';\nimport ReactBootstrapSlider from 'react-bootstrap-slider';\n\nexport default ({sequencerEngine, children}) => {\n    return (\n        <div className=\"mixer-toolbar-container\">\n          <div className=\"mixer-toolbar\">\n            <BpmSlider sequencerEngine={sequencerEngine}/>\n            <MixButtons sequencerEngine={sequencerEngine}/>\n            <ClockComponent sequencerEngine={sequencerEngine.headSequencerEngine}/>\n            <RollButtons sequencerEngine={sequencerEngine}/>\n          </div>\n          {children}\n        </div>\n    );\n};\n","import React, { useEffect, useCallback, useState} from 'react';\nimport Colors from 'components/Colors.js';\nimport {useTags} from '../links/useTags.js';\nimport TagEditor from '../links/TagEditor.js';\nimport {useComments} from '../comments/useComments.js';\nimport ConditionedComponent from \"components/ConditionedComponent.js\";\nimport {connect} from 'react-redux';\nimport {useProjectMetadata} from \"components/explore/useProjectMetadata.js\";\n\nconst colors = new Colors();\n\nconst WorkMetadata = ({\n    work,\n    showComments,\n    setSearchTag,\n    editTags=true\n}) => { \n    work.id = work.newSequence;\n    const [works, setWorks] = useState([work]);\n    const {comments} = useComments({works});\n    const [showTags, setShowTags] = useState(false);\n    const {tags} = useTags({work});\n\n    const {\n        isStarred,\n        showStar,\n        isFavorited,\n        onStarClicked,\n        onFavoriteClicked} = useProjectMetadata({track: work});\n\n    const onClickTag = useCallback((e, tag) => {\n        e.stopPropagation();\n        setSearchTag(tag);\n    }, [setSearchTag]);\n\n    let className = \"work-metadata\";\n    if (showTags) {\n        className += \" showing-tags\";\n    }\n    return (\n        <div className={className}>\n        <div className=\"metadata-inner\">\n          <div className=\"work-tags\">\n            {!editTags ? tags\n             .filter(x => x)\n             .map(\n                x =>\n                    <div\n                      onClick={(e) => onClickTag(e, x)}\n                      className=\"work-tag\">{x}\n                    </div>\n            ) : ''}</div>\n          {showTags ? <TagEditor work={work}/> : ''}\n          <img\n            onClick={() => setShowTags(!showTags)}\n            className={showTags ? \"show tag-icon\" : \"tag-icon\"} src=\"/tag.svg\"/>\n          {showComments && comments.length > 0 ?\n           <img className=\"comments-icon\" src=\"/comments.svg\"/> : \"\"}\n          <ConditionedComponent condition={showStar}>\n            <div\n              onClick={onStarClicked}\n              className={isStarred ? \"star starred\" : \"star\"}>\n                <span>&#9734;</span>\n            </div>\n          </ConditionedComponent>\n          <div onClick={onFavoriteClicked} className={isFavorited ? \"heart favorited\" : \"heart\"}/>\n        </div>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WorkMetadata);\n","import React, {useState, useEffect, useCallback} from 'react';\nimport {connect} from 'react-redux';\n\nconst NAMES = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J'];\nconst SubSequenceButtons = ({sequencerEngine, currentSubSequence, subSequences}) => {\n    return (\n        <div className=\"sub-sequences\">\n        {subSequences.map(\n            (id, i) =>\n                <div\n                  onClick={() => sequencerEngine.switchToSubSequence(id)}\n                  className={id === currentSubSequence ? \"sub-sequence current\" : \"sub-sequence\"}>\n                  {NAMES[i]}</div>)}\n        </div>\n    );\n};\n\nconst mapStateToProps = (state, props) => {\n    let sequenceId = props.sequencerEngine.engineId;\n    let subSequenceId = props.sequencerEngine.currentSubSequence.id;\n    return {\n        currentSubSequence: state.sequencer.currentSubSequence[sequenceId],\n        subSequences: state.sequencer.subSequences[sequenceId]\n    };\n};\n\nexport default connect(mapStateToProps, null)(SubSequenceButtons);\n","import React, {useState, useCallback} from 'react';\nimport {connect} from 'react-redux';\nimport ReactBootstrapSlider from 'react-bootstrap-slider';\nimport {changeVolume} from 'engine/mix/actions.js';\n\nconst MIN_VOLUME = -70;\nconst MAX_VOLUME = 6;\n\nconst WorkVolume = ({masterVolume, id, multiSequencerEngine, sequencerEngine}) => {\n    const volume = getVolumeRatio(masterVolume);\n    const onChange = useCallback((e) => {\n        let volume = getVolumeFromRatio(e.target.value);\n        multiSequencerEngine.\n            dispatch(\n                changeVolume(\n                    sequencerEngine.sequenceId,\n                    volume));\n    }, [sequencerEngine, multiSequencerEngine]);\n\n    return (\n        <div className=\"work-volume-container\">\n          <ReactBootstrapSlider\n            value={volume}\n            change={onChange}\n            step={0.01}\n            className=\"work-fader\"\n            max={1}\n            min={0}\n            orientation=\"vertical\"\n            reversed={true}/>\n        </div>\n    );\n};\n\nfunction getVolumeFromRatio(ratio, min=MIN_VOLUME, max=MAX_VOLUME) {\n    let fullRatio = Math.pow(ratio, 1.0/4.0);\n    return min + (max - min) * fullRatio;\n}\n\nfunction getVolumeRatio(volume, min=MIN_VOLUME, max=MAX_VOLUME) {\n    return Math.pow((volume - min) / (max - min), 4.0);\n}\n\nconst mapStateToProps = (state, props) => {\n    return {\n        masterVolume: state.sequencer.masterVolumes[props.id]\n    };\n};\n\nexport default connect(mapStateToProps, null)(WorkVolume);\n\n","import React, { useState, useCallback} from 'react';\nimport {connect} from 'react-redux';\nimport {Knob, Arc, Pointer, Value} from 'rc-knob';\nimport {changeTranspose} from 'engine/mix/actions.js';\nimport Colors from 'components/Colors.js';\n\nconst colors = new Colors();\n\nconst TransposeKnob = ({sequencerEngine, value, id}) => {\n    const onChange = useCallback((v) => {\n        v = Math.round(v);\n        if (v === value) {\n            return;\n        }\n        sequencerEngine.multiSequencerEngine.dispatch(\n            changeTranspose(\n                sequencerEngine.sequenceId,\n                v));\n    }, [sequencerEngine, value]);\n\n    let color = colors.getColorForHash(id || 'what');\n    return (\n        <div className=\"transpose-container\">\n            <Knob \n              size={50}  \n              angleOffset={220} \n              angleRange={280}\n              value={value}\n              initialValue={value}\n              step={1}\n              min={-24}\n              max={24}\n              onChange={onChange}\n              >\n              <Arc \n                arcWidth={3}\n                color={color}\n                background=\"rgb(56, 63, 72)\"\n                />\n              <Pointer \n                width={3} \n                height={15}\n                radius={10}\n                type=\"rect\"\n                color={color}\n                />\n             <Value className=\"transpose-value\"/>\n            </Knob>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state, props) => {\n    return {\n        value: state.explore.workTransposes[props.sequencerEngine.sequenceId] || 0\n    };\n};\n\nexport default connect(mapStateToProps, null)(TransposeKnob);\n","import React, { useState, useCallback} from 'react';\nimport {Knob, Arc, Pointer} from 'rc-knob';\nimport {connect} from 'react-redux';\nimport {setMixColorValue} from 'actions/index.js';\nimport {changeColor} from 'engine/mix/actions.js';\nimport Colors from 'components/Colors.js';\n\nconst colors = new Colors();\n\nfunction ColorKnob({value=0.5, setColorValue, mixEffects, sequencerEngine, id}) {\n    const onChange = useCallback((v) => {\n        sequencerEngine.multiSequencerEngine.dispatch(\n            changeColor(\n                id,\n                v));\n    }, []);\n\n    let color = colors.getColorForHash(id || 'what');\n    return (\n        <div className=\"color-container\">\n            <Knob \n              size={50}  \n              angleOffset={220} \n              angleRange={280}\n              value={value}\n              min={0}\n              max={1}\n              onChange={value => onChange(value)}\n              >\n              <Arc \n                arcWidth={3}\n                color={color}\n                background=\"rgb(56, 63, 72)\"\n                />\n              <Pointer \n                width={3} \n                height={15}\n                radius={10}\n                type=\"rect\"\n                color={color}\n                />\n            </Knob>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state, props) => {\n    return {\n        value: state.explore.mixColorValues[props.id] \n    };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n    return {\n        setColorValue: (value) => dispatch(setMixColorValue(props.id, value))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ColorKnob);\n","import React, {useState, useEffect, useCallback} from 'react';\nimport {setProjectDragging} from 'actions/index.js';\nimport {getWallpapers} from 'decentralized/settings/appearance.js';\nimport WorkMetadata from './WorkMetadata.js';\nimport PitchClock from 'components/apps/PitchClock.js';\nimport ProgressBar from 'components/progressbar/ProgressBar.js';\nimport {setExploreWork} from 'actions/index.js';\nimport {playWork} from 'engine/mix/actions.js';\nimport SubSequenceButtons from './SubSequenceButtons.js';\nimport ethereum from 'decentralized/ethereum.js';\nimport Colors from 'components/Colors.js';\nimport PatternButtons from 'components/user/PatternButtons.js';\nimport {connect} from 'react-redux';\nimport PlayButton from 'components/user/PlayButton.js';\nimport WorkVolume from './WorkVolume.js';\nimport TransposeKnob from '../mixer/TransposeKnob.js';\nimport ColorKnob from '../mixer/ColorKnob.js';\n\nconst colors = new Colors();\n\nconst WorkMixer = ({\n    workNumber,\n    work,\n    sequencerEngine,\n    isLoading,\n    isPlaying,\n    unloadWork,\n    setExploreWork,\n    isAnnotationShowing,\n    setProjectDragging\n}) => {\n    const [author, setAuthor] = useState('');\n    const _sequencerEngine = sequencerEngine.idToSequencerEngine[work.newSequence];\n\n    const [title, setTitle] = useState(work.title);\n    const [thumbnail, setThumbnail ] = useState(undefined);\n\n    useEffect(() => {\n        if (work.guildId) {\n            ethereum.guildSequences._decryptQueryResult(work)\n                .then(s => setTitle(s.title));\n        }\n    }, [work, setTitle]);\n\n    useEffect(() => {\n        if (_sequencerEngine && _sequencerEngine._wallpaper) {\n            getWallpapers(_sequencerEngine._wallpaper).then(\n                results => {\n                    if (results && results[0]) {\n                        setThumbnail(results[0].thumbnail);\n                    }\n                }\n            );\n        }\n\n    }, _sequencerEngine && _sequencerEngine._wallpaper);\n\n    useEffect(() => {\n        ethereum.users.getUserName(work.user)\n            .then((userName) => setAuthor(userName));\n    }, [work]);\n\n    const playClicked = () => {\n        let _work = {\n            ... work,\n            id: work.newSequence\n        };\n        sequencerEngine.dispatch(\n            playWork(_work));\n    };\n\n    if (isLoading || !_sequencerEngine) {\n        return (\n            <div className=\"work-mixer loading\">\n              <ProgressBar width={200} id={work.newSequence}/>\n              <div onClick={unloadWork} className=\"delete-button\">x</div>\n            </div>\n        );\n    }\n\n    let titleColor = colors.getColorForHash(work.newSequence);\n    let playStyle = {\n        backgroundColor: titleColor\n    };\n\n    work.workNumber = workNumber;\n    let style = {\n    };\n    let innerStyle = {};\n    if (thumbnail) {\n        innerStyle.backgroundImage = 'url(/ipfs/' + thumbnail + ')';\n    }\n    return (\n        <div\n          className=\"work-mixer-container\">\n          <div\n            style={style} className=\"work-mixer\">\n            <div\n              style={innerStyle} className=\"inner\">\n              <WorkVolume\n                multiSequencerEngine={sequencerEngine}\n                sequencerEngine={_sequencerEngine} id={work.newSequence}/>\n              <div className=\"work-fields\">\n                <SubSequenceButtons sequencerEngine={_sequencerEngine}/>\n                <PatternButtons\n                  color={titleColor}\n                  sequencerEngine={_sequencerEngine}/>\n                <div className=\"cassette\">\n                  <TransposeKnob id={work.newSequence} sequencerEngine={_sequencerEngine}/>\n                  <ColorKnob\n                    mixEffects={_sequencerEngine.channelMixer.mixEffects}\n                    sequencerEngine={_sequencerEngine}\n                    id={work.newSequence}/>\n                </div>\n              </div>\n            </div>\n            <div\n              draggable={true}\n              onDragStart={() => setProjectDragging(work)}\n              onDragOver={(e) => e.preventDefault()}\n              className=\"bottom\">\n              <div\n                style={playStyle}\n                className=\"play-button\">\n                <PlayButton color={colors.getColorForHash(work.newSequence)} isPlaying={isPlaying} play={playClicked}/>\n              </div>\n              <div\n                className=\"title\">\n                <div className=\"work-title\">\n                  {title}\n                </div>\n                <div className=\"author-divider\">\n                  -\n                </div>\n                <div className=\"work-author\">\n                  <div className=\"author-label\">\n                    Author\n                  </div>\n                  <div className=\"author-name\">\n                    {author}\n                  </div>\n                </div>\n              </div>\n              <img\n                onClick={() => setExploreWork(isAnnotationShowing ? undefined : work)}\n                src=\"/annotations.png\"\n                className={isAnnotationShowing ? \"annotation-button showing\" : \"annotation-button\"}/>\n              <div\n                style={playStyle}\n                onClick={() => {setExploreWork(undefined); unloadWork();}} className=\"delete-button\">x</div>\n            </div>\n            <WorkMetadata work={work}/>\n          </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state, props) => {\n    return {\n        isLoading: state.sequencer.loadingSequence[props.work.newSequence],\n        isPlaying: state.sequencer.isPlaying[props.work.newSequence],\n        isAnnotationShowing : state.explore.exploreWork === props.work,\n        worksLoaded: state.explore.worksLoaded\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setExploreWork: (work) => dispatch(setExploreWork(work)),\n        setProjectDragging: (x) => dispatch(setProjectDragging(x))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WorkMixer);\n","import React, {useState, useEffect, useCallback} from 'react';\n\nexport default ({recording, setDeleting, deleting, onClickRecord}) => {\n    let recClass = \"button-option\";\n    if (recording) {\n        recClass += \" selected\";\n    }\n\n    let delClass = \"button-option\";\n    if (deleting) {\n        delClass += \" selected\";\n    }\n\n    return (\n        <div className=\"sample-options\">\n          <div className=\"buttons\">\n          <div\n            onClick={onClickRecord}\n            className={recClass}>\n            Rec \n          </div>\n          <div\n            onMouseDown={() => setDeleting(true)}\n            onMouseUp={() => setDeleting(false)}\n            className={delClass}>\n            Del \n          </div>\n          </div>\n        </div>\n    );\n}\n","import React, {useEffect, useState, useCallback} from 'react';\nimport {connect} from 'react-redux';\nimport Resolution from 'engine/Resolution.js';\nimport {TRIGGER_SAMPLE, RELEASE_SAMPLE} from 'constants/event-types.js';\nimport StepData from 'pattern/StepData.js';\nimport RecordedTrigger from 'keyboard/RecordedTrigger.js';\nimport Colors from 'components/Colors.js';\nconst colors = new Colors();\nconst RESOLUTION = new Resolution(32, false);\nconst STEP_DATA = new StepData();\n\nexport default ({track, setLastClicked, selected, recording}) => {\n    let {instrument} = track;\n    const [recordedTrigger, setRecordedTrigger] = useState(undefined);\n    let [lastTrigger, setLastTrigger] = useState(0);\n    let [lastRelease, setLastRelease] = useState(0);\n\n    let isPlaying = lastTrigger > lastRelease;\n    let sample = instrument.defaultSampler && instrument.defaultSampler.sample;\n\n    const onMouseDown = useCallback(() => {\n        if (track.sequencerEngine.state.keyboard.isCommandDown) {\n            setLastClicked(track);\n            return;\n        }\n        if (instrument.defaultSampler.loop && isPlaying) {\n            instrument.triggerRelease();\n        } else {\n            instrument.triggerAttack();\n        }\n\n        if (recording) {\n            setRecordedTrigger(new RecordedTrigger(\n                track,\n                0,\n                RESOLUTION,\n                track.sequencerEngine,\n                true));\n                \n        }\n        setLastClicked(track);\n    }, [instrument, track, recording, setRecordedTrigger, isPlaying]);\n\n    const onMouseUp = useCallback(() => {\n        if (track.gated) {\n            instrument.triggerRelease();\n        }\n        if (recording && recordedTrigger) {\n            recordedTrigger.record();\n            setRecordedTrigger(undefined);\n        }\n    }, [instrument, track, recording, recordedTrigger, setRecordedTrigger]);\n\n    const onTrigger = useCallback((e) => {\n        if (e.trackNumber === track.trackNumber) {\n            setTimeout(() => {\n                setLastTrigger(new Date().getTime() + e.duration);\n                if (e.duration > 0) {\n                    setTimeout(onRelease, e.duration * 1000);\n                }\n            }, e.time);\n        }\n    }, [track, setLastTrigger, onRelease]);\n\n    const onRelease = useCallback((e) => {\n        if (e === undefined ||\n            e.trackNumber === track.trackNumber) {\n            setLastRelease(new Date().getTime());\n        }\n    }, [track, setLastRelease]);\n\n    const addEventListeners = () => {\n        window.addEventListener(TRIGGER_SAMPLE, onTrigger);\n        window.addEventListener(RELEASE_SAMPLE, onRelease);\n    };\n\n    const removeEventListeners = () => {\n        window.removeEventListener(TRIGGER_SAMPLE, onTrigger);\n        window.removeEventListener(RELEASE_SAMPLE, onRelease);\n    };\n\n    useEffect(() => {\n        addEventListeners();\n        return removeEventListeners;\n    }, []);\n\n    let className = \"sampler-trigger\";\n    if (isPlaying) {\n        className += \" triggering\";\n    }\n\n    if (selected) {\n        className += \" selected\";\n    }\n    if (sample && sample.videoId) {\n        return (\n            <img\n              draggable={false}\n              onMouseDown={onMouseDown}\n              onMouseUp={onMouseUp}\n              onMouseLeave={onMouseUp}\n              className={className}\n              src={sample.getThumbnail()}/>\n        );\n    }\n\n    let color = colors.getColorForTrack(track);\n    let style = {\n        backgroundColor: color\n    };\n    return (\n        <div\n          draggable={false}\n          onMouseDown={onMouseDown}\n          onMouseUp={onMouseUp}\n          onMouseLeave={onMouseUp}\n          style={style}\n          className={className}>\n        </div>\n    );\n}\n\n\n","import React, {useState, useEffect, useCallback} from 'react';\nimport ParameterKnob from 'components/knobs/ParameterKnob.js';\nimport Colors from 'components/Colors.js';\nconst colors = new Colors();\n\nexport default ({lastClicked, deleteSample, recording, onClickRecord}) => {\n    const [gated, setGated] = useState(false);\n    const [looping, setLooping] = useState(false);\n    const [warp, setWarp] = useState(false);\n    const [trackLength, setTrackLength] = useState(1);\n\n    const onClickLoop = useCallback(() => {\n        lastClicked.instrument.loopParameter.set(!looping);\n        setLooping(!looping);\n    }, [setLooping, looping, lastClicked]);\n\n    const onClickGate = useCallback(() => {\n        lastClicked.gated = !gated;\n        setGated(!gated);\n    }, [setGated, gated, lastClicked]);\n\n    const onClickLength = useCallback(() => {\n        let newTrackLength = trackLength * 2;\n        if (newTrackLength === 8) {\n            newTrackLength = 1;\n        }\n        lastClicked.pattern.changeLength(newTrackLength * 32);\n        setTrackLength(newTrackLength);\n    }, [setTrackLength, trackLength, lastClicked]);\n\n    useEffect(() => {\n        if (lastClicked) {\n            setGated(lastClicked.gated);\n            setLooping(lastClicked.instrument.loop);\n            setWarp(lastClicked.isWarped());\n            setTrackLength(lastClicked.length / 32);\n        }\n    }, [lastClicked, setGated, setLooping, setWarp, setTrackLength]);\n    if (lastClicked === undefined) {\n        return [];\n    }\n\n    let gateClass = \"button-option\";\n    let loopClass = \"button-option\";\n    let warpClass = \"button-option\";\n\n    let color = colors.saturate(\n        colors.getColorForHash(lastClicked.instrument.defaultSampler.sample.getId()), 3);\n\n    let loopingStyle = {};\n    let gatedStyle = {};\n    let lengthStyle = {\n        backgroundColor : color,\n        color : 'black'\n    };\n\n    if (looping) {\n        loopClass += \" selected\";\n        loopingStyle.backgroundColor = color;\n        loopingStyle.color = 'black';\n    }\n\n\n    if (gated) {\n        gateClass += \" selected\";\n        gatedStyle.backgroundColor = color;\n        gatedStyle.color = 'black';\n    }\n\n\n    return (\n        <div className=\"sample-options\">\n         <div className=\"name\">\n            {lastClicked.instrument.defaultSampler.sample.name}\n          </div>\n          <div className=\"buttons\">\n            <div\n              onClick={onClickGate}\n              style={gatedStyle}\n              className={gateClass}>\n              Gate\n            </div>\n            <div\n              onClick={onClickLoop}\n              style={loopingStyle}\n              className={loopClass}>\n              Loop\n            </div>\n            <div\n              onClick={onClickLength}\n              style={lengthStyle}\n              className=\"button-option length-button\">\n              {trackLength} Bars\n            </div>\n            <div\n              onClick={deleteSample}\n              className=\"delete-button\">x</div>\n          </div>\n          <div className=\"knobs\">\n            <ParameterKnob\n              min={-40}\n              max={0}\n              color={color} parameter={lastClicked.volumeParameter}/>\n            <ParameterKnob color={color} parameter={lastClicked.instrument.defaultSampler.transposeParameter}/>\n          </div>\n        </div>\n    );\n}\n","import React, {useEffect, useState, useCallback} from 'react';\nimport PatternOptions from './PatternOptions.js';\nimport SamplerTrigger from './SamplerTrigger.js';\nimport SampleOptions from './SampleOptions.js';\nimport PrettyWaveform from 'components/waveform/PrettyWaveform';\nimport WorkVolume from './WorkVolume.js';\n\nexport default ({sequencerEngine, samplersLoaded, deleteSample}) => {\n    const [recording, setRecording] = useState(false);\n    const [deleting, setDeleting] = useState(false);\n    const [lastClicked, setLastClicked] = useState(undefined);\n\n    useEffect(() => {\n        if (samplersLoaded[0]) {\n            let _sequencerEngine = samplersLoaded[0].sequencerEngine;\n            _sequencerEngine.deleting = deleting;\n        }\n    }, [deleting, samplersLoaded]);\n\n    const onClickRecording = useCallback(() => {\n        setRecording(!recording);\n    }, [recording, setRecording]);\n\n    if (samplersLoaded.length === 0) {\n        return [];\n    }\n\n    let waveform = '';\n    if (lastClicked) {\n        let {instrument} = lastClicked;\n        waveform = (\n            <PrettyWaveform\n              instrument={instrument}\n              color={\"#ffffff\"}\n              sampler={instrument.defaultSampler}\n              soundId={instrument.defaultSampler.sample.getId()}\n              buffer={instrument.defaultSampler.sample.audioBuffer}\n              width={150}\n              height={40}\n            />\n        );\n    }\n    return (\n        <div className=\"sampler\">\n          <div className=\"inner\">\n            <WorkVolume\n              multiSequencerEngine={sequencerEngine}\n              sequencerEngine={samplersLoaded[0].sequencerEngine}\n              id={samplersLoaded[0].sequencerEngine.sequenceId}/>\n            <div className=\"sampler-triggers\">\n              {samplersLoaded.map(\n                  track =>\n                      <SamplerTrigger\n                        key={track.id}\n                        recording={recording}\n                        selected={lastClicked === track}\n                        setLastClicked={setLastClicked}\n                        track={track}/>)}\n            </div>\n            <div className=\"right-side\">\n              {waveform}\n              <SampleOptions\n                deleteSample={() => {\n                    setLastClicked(undefined);\n                    deleteSample(lastClicked);\n                }}\n                lastClicked={lastClicked}/>\n            </div>\n          </div>\n          <PatternOptions\n            setDeleting={setDeleting}\n            deleting={deleting}\n            recording={recording}\n            onClickRecord={onClickRecording}/>\n       </div>\n    );\n}\n\n\n","import React, {useState, useEffect} from 'react';\nimport ipfs from 'decentralized/Ipfs.js';\nimport ethereum from 'decentralized/ethereum.js';\nimport ConditionedComponent from 'components/ConditionedComponent.js';\n\nexport default ({work, onClick, mixMode, sequencerEngine}) => {\n    const [author, setAuthor] = useState('');\n    const [authors, setAuthors] = useState({});\n    const [works, setWorks] = useState([]);\n    const [mix, setMix] = useState({});\n\n    useEffect(() => {\n        ethereum.users.getUserName(work.user)\n            .then(name => setAuthor(name));\n    }, [work, setAuthor]);\n\n    useEffect(() => {\n        if (work) {\n            // fetch works\n            if (work.works) {\n                setMix(work);\n                setWorks(work.works);\n            } else {\n                ipfs.getJson(work.mixHash)\n                    .then(mix => {\n                        mix.mixHash = work.mixHash;\n                        setWorks(mix.works);\n                        setMix(mix);\n                    });\n            }\n        }\n    }, [work, setWorks, setMix]);\n\n    useEffect(() => {\n        (async () => {\n            let obj = {};\n            for (let i in works) {\n                obj[works[i].user] = await ethereum.users.getUserName(works[i].user);\n            }\n            setAuthors(obj);\n        })();\n    }, [works, setAuthors]);\n\n    const unloadMix = () => {\n        sequencerEngine.unloadAll();\n    };\n\n    let deleteButton = '';\n    if (mixMode) {\n        deleteButton = (\n            <div\n              onClick={unloadMix}\n              className=\"delete-button\">\n              x\n            </div>\n        );\n    }\n\n    let isEdit = work.previousHash && work.previousHash !== '';\n    return (\n        <div\n          onClick={() => onClick(mix)}\n          className=\"work work-mix\">\n          {deleteButton}\n          <div className=\"mix-info\">\n            {works.map(\n                work =>\n                    [work.title + ' - ', <span className=\"work-author\">{authors[work.user]}</span>]\n            )}\n          </div>\n          <div className=\"name\">\n            <div className=\"work-author\">\n              {author}\n            </div>\n            <div className=\"title\">\n              {work.title}\n            </div>\n            <div className=\"mix-edit-info\">\n              {isEdit ? 'Edit' : 'Original'}\n            </div>\n            <div className=\"mix-background\">\n              MIX\n            </div>\n          </div>\n        </div>);\n};\n","import React, {useCallback} from 'react';\nimport RecordedMix from './RecordedMix.js';\nimport Toolbar from './Toolbar.js';\nimport ClockComponent from 'components/toolbar/ClockComponent.js';\nimport RollButtons from './RollButtons.js';\nimport {connect} from 'react-redux';\nimport WorkMixer from './WorkMixer.js';\nimport Sampler from './Sampler.js';\nimport WorkMix from '../work/WorkMix.js';\n\nconst Mixer = ({\n    worksLoaded,\n    sequencerEngine,\n    unloadWork,\n    samplersLoaded,\n    deleteSample,\n    mixLoaded,\n    mixHasEdits,\n    children,\n    lists,\n}) => {\n\n    const clearMix = useCallback(() => {\n        sequencerEngine.unloadAll();\n    }, [sequencerEngine]);\n\n    if (sequencerEngine === undefined) {\n        return (<div></div>);\n    }\n\n    let loadedMixComponent = '';\n    if (mixLoaded) {\n        loadedMixComponent = (\n            <WorkMix\n              mixHasEdits={true}\n              sequencerEngine={sequencerEngine}\n              mixMode={true}\n              onClick={clearMix}\n              work={mixLoaded}/>\n        );\n    }\n\n    return (\n        <div className=\"mixer no-select\">\n          <div className=\"mixer-and-works\">\n            <Toolbar sequencerEngine={sequencerEngine}/>\n            <div className=\"works-container\">\n              {worksLoaded.map(\n                  (work, i) =>\n                      <WorkMixer\n                      workNumber={i}\n                        key={work.newSequence}\n                        unloadWork={() => unloadWork(work)}\n                        sequencerEngine={sequencerEngine} work={work}/>)}\n              <Sampler\n                sequencerEngine={sequencerEngine}\n                deleteSample={deleteSample}\n                samplersLoaded={samplersLoaded}/>\n              {mixLoaded ? loadedMixComponent : ''}\n              {mixHasEdits ? \n               <RecordedMix\n                 originalMix={mixLoaded}\n                 sequencerEngine={sequencerEngine}/> : ''}\n            </div>\n            {lists}\n          </div>\n          {children}\n        </div>\n    );\n}\n\nconst mapStateToProps = (state, props) => {\n    return {\n        headSequencerEngine: props.sequencerEngine && props.sequencerEngine.headSequencerEngine,\n        mixLoaded: state.explore.mixLoaded,\n        mixHasEdits: state.explore.mixHasEdits\n    };\n};\n\nexport default connect(mapStateToProps, null)(Mixer);\n","import React, { useEffect, useCallback, useState} from 'react';\nimport ethereum from 'decentralized/ethereum.js';\nimport {connect} from 'react-redux';\nimport ipfs from 'decentralized/Ipfs.js';\n\nconst WorkList = ({work, onClick}) => { \n    let [listData, setListData] = useState(undefined);\n    let [userName, setUserName] = useState('');\n    let [projects, setProjects] = useState([]);\n    let [thumbnail, setThumbnail] = useState('');\n\n    useEffect(() => {\n        // if its not loaded then \n        if (work.projects) {\n            console.log(\"there was work.projects and work.image =\", work.image);\n            setProjects(work.projects);\n            setThumbnail(ipfs.getHashUrl(work.image));\n            setListData({\n                ... work});\n        } else {\n            ipfs.getJson(work.newContent).then(\n                json => {\n                    setListData({\n                        ... work,\n                        ... json\n                    });\n                    setThumbnail(ipfs.getHashUrl(json.image));\n                    setProjects(json.projects);\n                });\n        }\n    }, [work]);\n\n    useEffect(() => {\n        ethereum.users.getUserName(work.user).then(\n            setUserName);\n    }, [work, setUserName]);\n\n    let style = {\n        backgroundImage: \"url(\" + thumbnail + \")\"\n    };\n\n    return (\n        <div onClick={() => onClick(listData)} style={style} className=\"work list\">\n          <div className=\"projects\">\n            {projects.map(\n                x =>\n                    <div className=\"project\">\n                      {x.title} .\n                    </div>)}\n          </div>\n          <div className=\"list-author\">{userName}</div>\n          <div className=\"list-title\">{work.title}</div>\n        </div>);\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WorkList);\n","import React, {useState, useEffect, useCallback} from 'react';\nimport Sample from 'repos/Sample.js';\nimport AudioUnit from 'engine/audio.js';\nimport Colors from 'components/Colors.js';\nconst colors = new Colors();\n\nexport default ({work, userName, loadSample}) => {\n    const [sampleHovered, setSampleHovered] = useState(undefined);\n    const [sampleText, setSampleText] = useState(undefined);\n\n    useEffect(() => {\n        if (sampleHovered) {\n            setSampleText(sampleHovered.title);\n        } else {\n            setSampleText(undefined);\n        }\n    }, [sampleHovered, setSampleText]);\n\n    let {samples, tags} = work;\n    return (\n        <div className=\"work samples\">\n          <div className=\"samples-container\">\n            {samples.map(\n                sample =>\n                    <WorkSample\n                      loadSample={() => loadSample(sample.ipfsHash)}\n                      onMouseOver={() => setSampleHovered(sample)}\n                      onMouseLeave={() => setSampleHovered(undefined)}\n                      sample={sample}/>)}\n          </div>\n          <div className=\"name\">\n            <div className=\"work-author\">\n              {sampleText ? sampleText : userName}\n            </div>\n            <div className=\"sampled\">\n              {tags.map(tag => <span className=\"tag\">{tag}</span>)}\n            </div>\n          </div>\n        </div>\n    );\n};\n\nconst WorkSample = ({sample, onMouseOver, onMouseLeave, loadSample}) => {\n    if (sample.videoId) {\n        var url = 'https://img.youtube.com/vi/' + sample.videoId + '/1.jpg';\n        return (\n            <img\n              onMouseDown={loadSample}\n              onMouseOver={onMouseOver}\n              onMouseLeave={onMouseLeave}\n              src={url} className=\"work-sample\"/>\n        );\n    }\n    let color = colors.saturate(colors.getColorForHash(sample.ipfsHash), 3);\n    let style = {\n        backgroundColor: color\n    };\n    return (\n        <div\n          onMouseDown={loadSample}\n          onMouseOver={onMouseOver}\n          onMouseLeave={onMouseLeave}\n          className=\"work-sample\" style={style}/>\n    );\n};\n","import React, {memo, useState, useEffect, useCallback} from 'react';\nimport {setExplorePersonSelected} from 'actions/index.js';\nimport WorkMetadata from \"components/explore/mix2/WorkMetadata.js\";\nimport {getWallpapers} from 'decentralized/settings/appearance.js';\nimport {useComments} from '../comments/useComments.js';\nimport WorkList from './WorkList.js';\nimport {connect} from 'react-redux';\nimport {setProjectDragging} from 'actions/index.js';\nimport {getBlockDate} from 'utils/getBlockDate.js';\nimport ConditionedComponent from 'components/ConditionedComponent.js';\nimport WorkSamples from './WorkSamples.js';\nimport WorkMix from './WorkMix.js';\nimport {SEQUENCE, SAMPLES, MIX, LIST} from './types.js';\nimport ethereum from 'decentralized/ethereum.js';\nimport {getWorkGraphic} from './getWorkGraphic.js';\nimport {formatDate} from 'components/selector2/formatDate.js';\n\nconst Work = memo(({\n    work,\n    onClick,\n    loadSample,\n    onClickMix,\n    onClickList,\n    setSearchTag,\n    setProjectDragging,\n    setPersonSelected\n}) => {\n    const [graphic, setGraphic] = useState('');\n    const [title, setTitle] = useState(work.title);\n    const [loading, setLoading] = useState(false);\n    const [collaborators, setCollaborators] = useState([]);\n    const [date, setDate] = useState(undefined);\n    const [thumbnail, setThumbnail] = useState(undefined);\n    const [works, setWorks] = useState([work]);\n    work.id = work.newSequence\n\n    useEffect(() => {\n        if (work.guildId) {\n            ethereum.guildSequences._decryptQueryResult(work)\n                .then(s => setTitle(s.title));\n        }\n    }, [work, setTitle]);\n\n    const {comments} = useComments({works});\n\n    useEffect(() => {\n        if (work.type === SEQUENCE) {\n            getWorkGraphic(work).then(\n                async ({wallpaper, graphic, bpm}) => {\n                    setGraphic(graphic);\n               });\n        }\n    }, [work]); \n\n    useEffect(() => {\n        getBlockDate(work.blockNumber).then(\n            setDate);\n    }, [work, setDate]);\n\n    useEffect(() => {\n        if (work.collaborators) {\n            let promises = [];\n            for (let c of work.collaborators) {\n                promises.push(ethereum.users.getUserName(c));\n            }\n            Promise.all(promises).then(\n                setCollaborators);\n        }\n    }, [work, setCollaborators]);\n\n    if (work.type === MIX) {\n        return (\n            <WorkMix work={work} onClick={onClickMix}> </WorkMix>\n        );\n    } else if (work.type === LIST) {\n        return (\n            <WorkList onClick={onClickList} work={work}/>\n        );\n    }\n\n    let isEdit = work.previousSequence && work.previousSequence !== '';\n\n    let style = {};\n    if (thumbnail) {\n        style.backgroundImage = 'url(/ipfs/' + thumbnail + ')';\n    }\n\n    let hours = undefined;\n    let minutes = undefined;\n    if (date) {\n        let now = new Date();\n        let timeSince = now.getTime() - date.getTime();\n        minutes = Math.ceil(timeSince / 1000 / 60);\n        hours = Math.ceil(minutes / 60);\n    }\n\n    return (\n        <div\n          draggable={true}\n          onDragStart={() => setProjectDragging(work)}\n          onDragOver={(e) => e.preventDefault()}\n          onClick={() => onClick(work)}\n          className=\"work\">\n          <WorkMetadata\n            setSearchTag={setSearchTag}\n            editTags={false}\n            showComments={true}\n            work={work}/>\n          <div\n            className=\"graphic\">\n            {graphic}\n          </div>\n          <div\n            className=\"name\">\n            <div\n              className=\"work-author\">\n              {collaborators.map(\n                  (x, i) =>\n                      <div\n                        onClick={(e) => {\n                            e.stopPropagation();\n                            setPersonSelected(work.collaborators[i]);\n                        }}\n                        className={i === 0 ? \"collaborator origin\" : \"collaborator\"}>{x}</div>)}\n            </div>\n            <div style={style} className=\"work-thumb\"></div>\n            <div className=\"work-title\">\n              <span>{title}</span>\n            </div>\n          </div>\n          <div className=\"work-edit-info\">\n            {isEdit ? 'Edit' : 'Original'}\n          </div>\n          <div  className=\"work-date\">\n            {date ?\n             minutes < 60 ? minutes + \" min ago\" :\n             hours < 48 ? hours + \" hours ago\" :\n             formatDate(date) : ''}\n          </div>\n        </div>\n    );\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n      setProjectDragging: (x) => dispatch(setProjectDragging(x)),\n      setPersonSelected : id => dispatch(setExplorePersonSelected(id))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Work);\n","import React, {useCallback, useState, useEffect} from 'react';\nimport {isMobile} from 'react-device-detect';\nimport {useFilterWorks} from './useFilterWorks.js';\nimport {useScroll} from './useScroll.js';\nimport {useMonths} from './useMonths.js';\nimport Months from './Months.js';\nimport {getBlockMonths} from 'utils/getBlockMonths.js';\nimport PulseLoader from 'react-spinners/PulseLoader'\nimport Work from './Work.js';\nimport { connect } from \"react-redux\";\nimport {\n    NUM_TRACKS,\n    ADD_TRACKS,\n    LOAD_TIME\n} from './constants.js';\n\nconst Works = ({\n    allSequences,\n    onClickWork,\n    onClickMix,\n    onClickList,\n    loadSample,\n    searchTerm,\n    searchOptions,\n    personSelected,\n    setSearchTag,\n    worksLoaded}) => {\n        let [state, setState] = useState({numTracks: Math.floor(NUM_TRACKS * window.innerWidth / 1000), scrollTop: 0});\n        let {scrollTop, numTracks} = state;\n\n        let {\n            userWorks,\n            works,\n            setIsLoading,\n            isLoading} = useFilterWorks({\n                allSequences,\n                searchTerm,\n                searchOptions,\n                setState\n            });\n\n        let {\n            months,\n            onClickMonth,\n            setCurrentMonth,\n            currentMonth} = useMonths({\n                setIsLoading,\n                setState,\n                userWorks\n            });\n\n        let {\n            onScroll,\n            scrollWorks,\n            toSkip} = useScroll({\n                works,\n                setIsLoading,\n                isLoading,\n                state,\n                setState,\n                userWorks,\n                setCurrentMonth,\n                months,\n                personSelected});\n        \n        //{!isMobile ? <div style={{height: Math.max(0, scrollTop - 1000)}} className=\"scroll-empty\"/> : ''}\n        return (\n            <div className=\"works-and-months\">\n              <div id=\"works\">\n                <div className=\"works-grid\">\n                  {scrollWorks.map(\n                      (work, i) =>\n                          <Work\n                            setSearchTag={setSearchTag}\n                            loadSample={loadSample}\n                            onClick={onClickWork}\n                            onClickMix={onClickMix}\n                            onClickList={onClickList}\n                            key={(i + Math.floor(toSkip)) + '-' + work.newSequence + '-' + work.blockNumber}\n                            work={work}\n                          />)}\n                </div>\n                <div className=\"loader-container\">\n                  <PulseLoader\n                    sizeUnit={\"px\"}\n                    size={20}\n                    color={'#42f4f1'}\n                    loading={isLoading}\n                  />\n                </div>\n              </div>\n              <Months months={months} onClickMonth={onClickMonth} currentMonth={currentMonth}/>\n            </div>\n        );\n    };\n\nconst mapStateToProps = (state, props) => {\n    return {\n        personSelected: state.explore.personSelected,\n        allSequences: state.explore.allSequences,\n        worksLoaded: state.explore.worksLoaded\n    };\n};\n\nexport default connect(mapStateToProps, null)(Works);\n\n\n","export const NUM_TRACKS=9;\nexport const ADD_TRACKS=6;\nexport const LOAD_TIME = 200;\n\n\n","import {useState, useEffect} from 'react';\nimport {\n    NUM_TRACKS,\n} from './constants.js';\n\nexport const useFilterWorks = ({\n    allSequences,\n    personSelected,\n    searchOptions,\n    searchTerm,\n    setState\n}) => {\n    const [isLoading, setIsLoading] = useState(false);    \n    let userWorks = allSequences.filter(\n        s => !personSelected || s.user === personSelected.id);\n    let filterSounds = searchOptions.indexOf(\"Samples\") > -1;\n    let filterProjects = searchOptions.indexOf(\"Projects\") > -1;\n    let filterLists = searchOptions.indexOf(\"Lists\") > -1;\n    \n    userWorks = userWorks \n        .filter(s =>\n                (filterLists && s.type === \"LIST\") ||\n                (filterSounds && (s.type === 'SAMPLES' || s.type === \"MIX\")) ||\n                (filterProjects && s.type === 'SEQUENCE'));\n    \n    let works = [... userWorks];\n    \n    useEffect(() => {\n        console.log(\"GOING TO BEGINNING\");\n        setState({\n            scrollTo: 0,\n            numTracks: NUM_TRACKS\n        });\n        let el = document.getElementById('works');\n        el.scrollTo(0, 0);\n    }, [searchTerm, searchOptions, setState]);\n    \n    useEffect(() => {\n        setState({numTracks: NUM_TRACKS, scrollTop: 0});\n    }, [personSelected]);\n    \n    return {works, userWorks, isLoading, setIsLoading};\n};\n","import React, {\n    useState,\n    useEffect,\n    useCallback} from 'react';\nimport {getBlockMonths} from 'utils/getBlockMonths.js';\nimport {\n    NUM_TRACKS,\n    ADD_TRACKS,\n    LOAD_TIME\n} from './constants.js';\n\nexport const useMonths = ({\n    setIsLoading,\n    userWorks,\n    setState,\n}) => {\n    let [currentMonth, setCurrentMonth] = useState(new Date().getMonth());\n    let [months, setMonths] = useState({});\n    useEffect(() => {\n        getBlockMonths().then(\n            x => setMonths(x));\n    }, [setMonths]);\n\n\n    const onClickMonth = useCallback((month) => {\n        setIsLoading(true);\n        let block = months[Math.min(new Date().getMonth(), month + 1)];\n        if (month == new Date().getMonth()) {\n            setState({numTracks: 25, scrollTop: 0});\n            setCurrentMonth(month);\n            setTimeout(() => {\n                setIsLoading(false);\n            }, 500);\n            return;\n        }\n\n        for (let i in userWorks) {\n            let _b = userWorks[i].blockNumber;\n            if (_b < block) {\n                let q = parseInt(i);\n                setState({numTracks: q+NUM_TRACKS, skipTracks: q});\n                setTimeout(() => {\n                    setCurrentMonth(month);\n                    setTimeout(() => {\n                        setIsLoading(false);\n                    }, 500);\n                }, 50);\n                break;\n            }\n        }\n    }, [months, userWorks, setState, setCurrentMonth, setIsLoading]);\n\n    return {onClickMonth, months, currentMonth, setCurrentMonth};\n};\n","import React, {useCallback, useState, useEffect} from 'react';\nimport {\n    NUM_TRACKS,\n    ADD_TRACKS,\n    LOAD_TIME\n} from './constants.js';\n\nconst MONTHS_WIDTH = 110;\nconst MARGIN = 30;\nconst WIDTH = 360;\nconst HEIGHT = 230;\n\nexport const useScroll = ({\n    setIsLoading,\n    isLoading,\n    userWorks,\n    setCurrentMonth,\n    months,\n    state,\n    setState,\n    works,\n    personSelected\n}) => {\n    let {skipTracks, scrollTop, numTracks} = state;\n    const onScroll = useCallback(() => {\n        if (numTracks >= userWorks.length) {\n            return;\n        }\n        let el = document.getElementById('works');\n        if (isLoading) {\n            return;\n        }\n        let bottom = el.scrollTop + el.offsetHeight;\n        let height = el.scrollHeight;\n        \n        if (el.scrollTop <= scrollTop - 1300 && scrollTop > 50) {\n            // this tells us the user wants to scroll to the very\n            // beginning again (they've scrolled past the tracks were showing\n            setTimeout(() => {\n                setState({numTracks: NUM_TRACKS, scrollTop: 0});\n                el.scrollTo(0, 0);\n                setCurrentMonth(new Date().getMonth());\n            }, LOAD_TIME);\n            return;\n        }\n\n        if (bottom >= height) { \n            setIsLoading(true);\n            let t = numTracks + ADD_TRACKS;\n            if (!userWorks[t]) {\n                setIsLoading(false);\n                return;\n            }\n            let block =  userWorks[t].blockNumber;\n            for (let month in months) {\n                month = parseInt(month);\n                if (block < months[month]) {\n                    setCurrentMonth(month - 1);\n                    break;\n                }\n            }\n            \n            setTimeout(() => {\n                console.log('setting scrollTop=', el.scrollTop);\n                setState({skipTracks, numTracks: numTracks + ADD_TRACKS, scrollTop: el.scrollTop});\n                setIsLoading(false);\n            }, LOAD_TIME);\n        }\n\n    }, [\n        numTracks,\n        setIsLoading,\n        skipTracks,\n        isLoading,\n        setState,\n        userWorks,\n        setCurrentMonth,\n        months,\n        scrollTop]);\n\n    function unbindScrolling() {\n        let el = document.getElementById(\"works\");\n        el.removeEventListener('scroll', onScroll);\n    }\n\n    useEffect(() => {\n        let el = document.getElementById('works');\n        el.scrollTo(0, 0);\n    }, [skipTracks]);\n\n    useEffect(() => {\n        let el = document.getElementById('works');\n        setState({numTracks: NUM_TRACKS, scrollTop: 0});\n        el.scrollTo(0, 0);\n        setCurrentMonth(new Date().getMonth());\n    }, [personSelected, setCurrentMonth]);\n\n    useEffect(() => {\n        let el = document.getElementById(\"works\");\n        el.addEventListener('scroll', onScroll);\n        return unbindScrolling;\n    }, [onScroll, userWorks, state, skipTracks]);\n\n    let toSkip = skipTracks;\n    if (skipTracks === undefined) {\n        let perRow = Math.max(1,Math.floor((window.innerWidth - MONTHS_WIDTH) / (WIDTH + 2*MARGIN)));\n        let rowsToSkip = Math.floor(scrollTop / (HEIGHT + 2*MARGIN));\n        let toSkip = rowsToSkip * perRow;\n        if (numTracks === NUM_TRACKS) {\n            toSkip = 0;\n        }\n        \n        toSkip = Math.max(0, toSkip - 50);\n    }\n    let _works = works.slice(toSkip, numTracks);\n    toSkip = skipTracks !== undefined ? 0 : toSkip;\n    \n    return {onScroll, scrollWorks: _works, toSkip};\n};\n","import React, {useState, useEffect, useCallback} from 'react';\nimport {lstorage} from 'utils/lstorage.js';\nimport ExhibitViewer from \"components/exhibit/ExhibitViewer.js\";\nimport {isMobile} from 'react-device-detect';\nimport ExploreWork from './details/ExploreWork.js';\nimport {\n    setWallpaper,\n    setExploreWork,\n    setAnimateWallpaper\n} from 'actions/index.js';\nimport ipfs from 'decentralized/Ipfs.js';\nimport CommentsPane from './comments/CommentsPane.js';\nimport UnknownProgressBar from \"components/progressbar/UnknownProgressBar.js\"\nimport {useLists} from './useLists.js';\nimport {setExploreUnpublished} from 'actions/index.js';\nimport ListsView from './lists/ListsView.js';\nimport ExploreToolbar from './toolbar/ExploreToolbar.js';\nimport AnnotationsView from './links/AnnotationsView.js';\nimport ExploreSearch from  './ExploreSearch.js';\nimport ExploreGuilds from './guilds/ExploreGuilds.js';\nimport {HOME, GUILDS, MESSAGES} from 'constants/explore-options.js';\nimport ConditionedComponent from 'components/ConditionedComponent.js';\nimport {loadSample, deleteSample} from './loading.js';\nimport {loadWork, unloadWork} from 'engine/mix/actions.js';\nimport {initSequencerEngine} from './initSequencer.js';\nimport Sample from 'repos/Sample.js';\nimport {\n    setExploreAllSequences,\n    setCommandDown,\n    setWorksLoaded\n} from 'actions/index.js';\nimport { connect } from \"react-redux\";\nimport ethereum from 'decentralized/ethereum.js';\nimport Navigation from './Navigation.js';\nimport People from './people/People.js';\nimport {fetchWorks} from './work/fetchWorks.js';\nimport Mixer from './mix2/Mixer.js';\nimport Works from './work/Works.js';\nimport \"../../Explore2.scss\";\n\nconst ExplorePage2 = (props) => {\n    const [sequencerEngine, setSequencerEngine] = useState(undefined);\n    let {personSelected, worksLoaded, setWorksLoaded, guildId} = props;\n    const [userId, setUserId] = useState(undefined);\n    const [samplersLoaded, setSamplersLoaded] = useState([]);\n    const [searchTerm, setSearchTerm] = useState('');\n    const [searchTag, setSearchTag] = useState(undefined);\n    const [searchOptions, setSearchOptions] = useState([\"Starred\", \"Projects\"]);\n    const {\n        lists, onListChanged, onClickList, creatingNewList, setCreatingNewList} =\n          useLists(props, sequencerEngine);\n    const [isFetching, setIsFetching] = useState(true);\n\n    useEffect(() => {\n        let engine = initSequencerEngine(props.store);\n        window.explore = true;\n        setSequencerEngine(engine);\n        fetchUserId();\n        window.addEventListener('keydown', onKeyDown);\n        window.addEventListener('keyup', onKeyUp);\n    }, []);\n\n    useEffect(() => {\n        props.setAllSequences([]);\n        setIsFetching(true);\n        fetchWorks(props.setAllSequences, setIsFetching, searchOptions, searchTerm, searchTag, guildId, personSelected)\n            .then(x => setIsFetching(false));\n    }, [personSelected, searchOptions, setIsFetching, searchTerm, searchTag, guildId]);\n\n    useEffect(() => {\n        if (!sequencerEngine) {\n            return;\n        }\n        let sequenceId = props.match && props.match.params.sequenceId != undefined ? \n            props.match.params.sequenceId :\n        null;\n        if (sequenceId) {\n            ethereum.getSequence(sequenceId).then(\n                work => {\n                    if (!work) {\n                        work = {newSequence: sequenceId, title: \"Unpublished work\"};\n                    }\n                    sequencerEngine.dispatch(\n                        loadWork(work));\n                    props.setExploreWork(work);\n                });\n        }\n    }, [sequencerEngine]);\n\n    const onKeyDown = useCallback((e) => {\n        if (e.key === 'Meta') {\n            props.setCommandDown(true);\n        }\n    }, []);\n\n    const onKeyUp = useCallback((e) => {\n        if (e.key === 'Meta') {\n            props.setCommandDown(false);\n        }\n    }, []);\n\n    const _unloadWork = useCallback((work) => {\n        sequencerEngine.dispatch(\n            unloadWork(work));\n    }, [sequencerEngine]);\n\n    const _loadWork= useCallback((work) => {\n        sequencerEngine.dispatch(\n            loadWork(work));\n    }, [sequencerEngine]);\n\n    const loadMix = useCallback((mix) => {\n        sequencerEngine.loadMix(mix);\n    }, [sequencerEngine]);\n\n    const _loadSample = \n        loadSample(sequencerEngine, setSamplersLoaded);\n\n    const _deleteSample = deleteSample(\n        setSamplersLoaded, samplersLoaded, sequencerEngine);\n\n    const fetchUserId = async () => {\n        let userId = await ethereum.getUser();\n        setUserId(userId);\n    };\n\n    useEffect(() => {\n        if (isMobile && worksLoaded && worksLoaded.length > 0) {\n            props.setExploreWork(worksLoaded[0]);\n        }\n    }, [worksLoaded]);\n\n    let exploreClass = \"explore-2\";\n    let style = {};\n    if (props.wallpaper) {\n        style.backgroundImage = 'url(' + ipfs.getHashUrl(props.wallpaper) + ')';\n    } else {\n        exploreClass += \" no-wallpaper\";\n    }\n    if (props.animateWallpaper) {\n        exploreClass += \" animate\";\n    }\n\n    useEffect(() => {\n        let item = lstorage.getItem(\"wallpaper\");\n        if (item) {\n            props.setWallpaper(item);\n        } else {\n            props.setWallpaper('QmUh2FeN3bw2VdcRVksDctr1ihjDwHpNhE6o9mkBhF2huB');\n        }\n        item  = lstorage.getItem(\"animateWallpaper\");\n        if (item !== undefined) {\n            props.setAnimateWallpaper(item === \"true\");\n        }\n    }, []);\n\n    if (worksLoaded && worksLoaded.length > 0) {\n        exploreClass += \" work-loaded\";\n    }\n    if (props.exploreWork) {\n        exploreClass += \" exploring\";\n    }\n    return (\n        <div className={exploreClass} style={style}>\n          {/*<ExhibitViewer sequencerEngine={props.exploreWork && sequencerEngine && sequencerEngine.getHead()}/>*/}\n         <ConditionedComponent condition={props.exploreOption === GUILDS}>\n            <ExploreGuilds store={props.store}/>\n          </ConditionedComponent>\n          <ConditionedComponent condition={props.exploreOption === HOME}>\n            <AnnotationsView\n              annotationsView={props.annotationsView}/>\n            <Mixer\n              unloadWork={_unloadWork}\n              sequencerEngine={sequencerEngine}\n              samplersLoaded={samplersLoaded}\n              lists={\n                  <ListsView\n                    loadWork={_loadWork}\n                    removeList={onClickList}\n                    onListChanged={onListChanged}\n                    creatingNewList={creatingNewList}\n                    hide={() => setCreatingNewList(false)}\n                    lists={lists}/>}\n              deleteSample={_deleteSample}\n              worksLoaded={worksLoaded}>\n              {sequencerEngine ? \n               <div className=\"login-and-comments\">\n                 <Navigation\n                   store={sequencerEngine.store}\n                   setSearchOptions={setSearchOptions}\n                   searchOptions={searchOptions}\n                   setSearchTerm={setSearchTerm}\n                   searchTerm={searchTerm}/> \n                 <CommentsPane sequencerEngine={sequencerEngine}/>\n               </div>\n               : ''}\n            </Mixer>\n           <ExploreToolbar\n              onNewList={() => setCreatingNewList(true)}>\n              <ExploreSearch\n                searchTag={searchTag}\n                setSearchTag={setSearchTag}\n                setSearchOptions={setSearchOptions}\n                searchOptions={searchOptions}\n                setSearchTerm={setSearchTerm}\n                searchTerm={searchTerm}/>\n            </ExploreToolbar>\n            {isFetching ? <UnknownProgressBar className=\"world-fetcher\" text=\"Fetching the world\"/> : ''}\n            {props.exploreWork ?\n             <ExploreWork work={props.exploreWork} sequencerEngine={sequencerEngine}/>\n             :\n            <Works\n              onClickMix={loadMix}\n              onClickList={onClickList}\n              loadSample={_loadSample}\n              onClickWork={_loadWork}\n              setSearchTag={setSearchTag}\n              searchOptions={searchOptions}\n              searchTerm={searchTerm}/>}\n            <div color=\"radial-gradient(75.29% 75.29% at 64.96% 24.36%, #F0DFA7 0.52%, #FDBDAA 18.75%, #FEA186 34.38%, #F09277 49.48%, #D27584 74.48%, #6B7B8A 100%)\" className=\"coke-machine-glow\"></div>\n          </ConditionedComponent>\n        </div>\n    );\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setAllSequences : sequences => dispatch(setExploreAllSequences(sequences)),\n        setCommandDown: x => dispatch(setCommandDown(x)),\n        setWorksLoaded: x => dispatch(setWorksLoaded(x)),\n        setExploreUnpublished: (x) => dispatch(setExploreUnpublished(x)),\n        setWallpaper: w => dispatch(setWallpaper(w)),\n        setAnimateWallpaper: w => dispatch(setAnimateWallpaper(w)),\n        setExploreWork: w => dispatch(setExploreWork(w)),\n    };\n};\n\nconst mapStateToProps = (state, props) => {\n    return {\n        allSequences: state.explore.allSequences,\n        personSelected: state.explore.personSelected,\n        worksLoaded: state.explore.worksLoaded,\n        exploreOption: state.explore.exploreOption,\n        annotationsView: state.explore.annotationsView,\n        wallpaper: state.sequencer.wallpaper,\n        animateWallpaper: state.sequencer.animateWallpaper,\n        exploreWork: state.explore.exploreWork,\n        personSelected: state.explore.personSelected,\n        guildId: state.guilds.selectedGuild ? state.guilds.selectedGuild.guildId : 0\n    };\n};\n \nexport default connect(mapStateToProps, mapDispatchToProps)(ExplorePage2);\n\n\n","import React, {useState, useEffect, useCallback} from 'react';\nimport {lstorage} from 'utils/lstorage.js';\nimport {deleteList} from 'decentralized/lists/ExploreLists.js';\n\nexport const useLists = (props, sequencerEngine) => {\n    const [creatingNewList, setCreatingNewList] = useState(false);\n    const [lists, setLists] = useState([]);\n\n    const onListChanged = useCallback((list, shouldDelete=false) => {\n        if (list === undefined) {\n            setCreatingNewList(false);\n            return;\n        }\n        // see if list exists\n        // if not add it\n        // otherwise replace it\n        let unsavedLists = lstorage.getItem(\"unsavedLists\");\n        if (unsavedLists) {\n            unsavedLists = JSON.parse(unsavedLists);\n        } \n\n        if (list.hash === undefined) {\n            if (shouldDelete) {\n                // delete it from the local storage\n                let filtered =  \n                    props.allSequences.filter(\n                        x => x.id !== list.id);\n                props.setAllSequences(filtered);\n                if (unsavedLists) {\n                    unsavedLists = unsavedLists.filter(\n                        x => x.name !== list.name);\n                    lstorage.setItem(\"unsavedLists\", JSON.stringify(unsavedLists));\n                    props.setExploreUnpublished(unsavedLists);\n                }\n            } else {\n                // replace it from the local storage\n                props.setAllSequences([\n                    {\n                        ... list,\n                        type: 'LIST'\n                    },\n                    ... props.allSequences,\n            ]);\n            }\n        } else {\n            if (shouldDelete) {\n                // it does have a hash, so we must run a deleteList transactiono\n                // and remove it from the allSequnces\n                deleteList(list.newContent);\n                let filtered =  \n                    props.allSequences.filter(\n                        x => x.hash !== list.hash);\n                props.setAllSequences(filtered);\n            }\n        }\n        setCreatingNewList(false);\n    }, [setCreatingNewList, sequencerEngine, props.allSequences]);\n\n    const onClickList = useCallback((list) => {\n        if (lists.indexOf(list) > -1) {\n            let _lists = [... lists];\n            _lists.splice(lists.indexOf(list), 1);\n            setLists(_lists);\n        }  else {\n            setLists([... lists, list]);\n        }\n    }, [setLists, lists]);\n\n\n    return {lists, onListChanged, onClickList, creatingNewList, setCreatingNewList};\n};\n","import ethereum from 'decentralized/ethereum.js';\nimport sampleRateChooser from 'engine/SampleRateChooser.js';\nimport {LOW_SAMPLE_RATE, LOWEST_SAMPLE_RATE} from 'constants/sample-rates.js';\nimport accounts from 'accounts/Accounts.js';\nimport MixableSequencerEngine from 'engine/mix/MixableSequencerEngine.js';\n\nexport const initSequencerEngine = (store) => {\n    accounts.setEthereum(ethereum);\n    ethereum.store = store;\n    ethereum.crypto.store = store;\n    ethereum.guilds.initGuilds();\n    accounts.setStore(store);\n    sampleRateChooser.setSampleRate(LOW_SAMPLE_RATE);\n    let sequencerEngine = new MixableSequencerEngine(store);\n    window.multiMix = true;\n    window.sequencerEngine = sequencerEngine;\n    sequencerEngine.ethereum = ethereum;\n    return sequencerEngine;\n};\n \n","import {useCallback} from 'react';\nimport Sample from 'repos/Sample.js';\n\nexport const loadSample = (\n    sequencerEngine,\n    setSamplersLoaded,\n    samplersLoaded) =>\n    useCallback(async (sampleId) => {\n        let track = sequencerEngine\n            .samplerTrack\n            .addSampledInstrumentTrack();\n        \n        let sample = new Sample(sampleId);\n        await sample.load();\n        await track.instrument.newSample(0, sample);\n        track.instrument.monophonic = true;\n        setSamplersLoaded(\n            [... sequencerEngine.samplerTrack.tracks]);\n \n    }, [setSamplersLoaded, samplersLoaded, sequencerEngine]);\n\nexport const deleteSample = (\n    setSamplersLoaded,\n    samplersLoaded,\n    sequencerEngine) =>\n    useCallback((sample) => {\n        sequencerEngine.samplerTrack.deleteTrack(sample.trackNumber);\n        setSamplersLoaded([... sequencerEngine.samplerTrack.tracks]);\n    }, [setSamplersLoaded, samplersLoaded, sequencerEngine]);\n\n\n"],"sourceRoot":""}