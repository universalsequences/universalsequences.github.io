{"version":3,"sources":["components/UniversalNavigator.js","components/SampledSound.js","components/SoundTagger.js","components/SoundUpload.js"],"names":["UniversalNavigator","window","location","this","props","view","_this","samplerClassName","exploreClassName","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","components_modals_LoginModal_js__WEBPACK_IMPORTED_MODULE_9__","show","showLogin","onClick","onClickLogo","onClickSequencer","onClickExplore","onClickSampler","components_toolbar_TransactionsView__WEBPACK_IMPORTED_MODULE_8__","store","components_guilds_GuildsMenu_js__WEBPACK_IMPORTED_MODULE_7__","Component","connect","state","sequencer","audioCtx","AudioContext","webkitAudioContext","SampledSound","Object","_Users_alecresende_code_visual_sampler_sequencer_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_super","call","soundId","audioUnit","AudioUnit","loadBuffer","bind","_Users_alecresende_code_visual_sampler_sequencer_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__","handleLoadBuffer","nextProps","_this2","console","log","sample","Sample","encryptedIpfs","name","title","videoId","getId","fetchAudio","then","setBuffer","audioBuffer","buffer","setState","self","_this3","undefined","react__WEBPACK_IMPORTED_MODULE_6___default","isSelected","components_Waveform_js__WEBPACK_IMPORTED_MODULE_8__","selections","onClickSelection","id","height","width","onSelection","start","end","waveformId","components_Youtube_js__WEBPACK_IMPORTED_MODULE_11__","onClickThumbnail","coverArt","isMuted","onNewSound","onDelete","tags","map","tag","reactstrap__WEBPACK_IMPORTED_MODULE_12__","onDeleteTag","color","SoundTagger","_tag","addListener","addEventListener","input","document","activeElement","focus","push","onUpdateTags","value","e","key","addTag","react__WEBPACK_IMPORTED_MODULE_7___default","soundUploadMode","onClickBack","reactstrap__WEBPACK_IMPORTED_MODULE_8__","type","ref","autoFocus","onKeyPress","onChange","event","onInputType","target","placeholder","addonType","SoundUpload","_Users_alecresende_code_visual_sampler_sequencer_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","files","selectedFile","description","soundIds","soundIdToName","soundIdToTags","selectedSounds","accounts","setStore","ethereum","crypto","setEthereum","checkLogin","guilds","initGuilds","sequencerEngine","preventDefault","dataTransfer","effectAllowed","dropEffect","_ref","_Users_alecresende_code_visual_sampler_sequencer_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_Users_alecresende_code_visual_sampler_sequencer_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","mark","_callee","ev","i","wrap","_context","prev","next","items","length","kind","uploadFile","getAsFile","abrupt","stop","_x","apply","arguments","file","reader","FileReader","readAsArrayBuffer","onloadend","_callee2","hash","_context2","result","ipfs","addArrayBuffer","sent","tagMode","_callee3","_this$state","_context3","addBlob","_Users_alecresende_code_visual_sampler_sequencer_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","_ref3","_callee4","_context4","fetchTags","_x3","samples","slice","date","Date","web3","utils","padLeft","ipfsHash","styles","country","year","getFullYear","newSamplesWithMetadata","keys","some","s","hasSelectedSounds","stopPropagation","_this$state2","react__WEBPACK_IMPORTED_MODULE_9___default","components_UniversalNavigator_js__WEBPACK_IMPORTED_MODULE_16__","onSubmit","startTagging","saveToEthereum","selectAll","components_SampledSound_js__WEBPACK_IMPORTED_MODULE_11__","selectSound","components_SoundTagger_js__WEBPACK_IMPORTED_MODULE_12__","uploadMode","soundIdToHash","selectedSoundIds"],"mappings":"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","file":"static/js/14.11f8fd16.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport GuildsMenu from 'components/guilds/GuildsMenu.js';\nimport TransactionsView from 'components/toolbar/TransactionsView';\nimport LoginModal from 'components/modals/LoginModal.js';\nimport '../navigator.scss';\n\nclass UniversalNavigator extends Component {\n    onClickSequencer() {\n        window.location = '/create/';\n    }\n\n    onClickSampler() {\n        if (this.props.view !== 'DISCOVER') {\n            window.location = '/discover/';\n        }\n    }\n\n    onClickExplore() {\n        if (this.props.view !== 'EXPLORE') {\n            window.location = '/explore/';\n        }\n    }\n\n    onClickLogo() {\n        window.location = '/';\n    }\n\n    render() {\n        let view = this.props.view || '';\n        let samplerClassName = view === 'DISCOVER' ? 'navigator-button selected' : 'navigator-button';\n        let exploreClassName = view === 'EXPLORE' ? 'navigator-button selected' : 'navigator-button';\n        return (\n            <div className=\"navigator\">\n              <LoginModal show={this.props.showLogin}/>\n              <div onClick={()=>this.onClickLogo()} className={\"universal-sequences-logo \" + view}>\n                ZEQUENCER\n              </div>\n              <div onClick={() => this.onClickSequencer()} className=\"navigator-button\">\n                CREATE\n              </div>\n              <div onClick={() => this.onClickExplore()} className={exploreClassName}>\n                EXPLORE\n              </div>\n              <div onClick={() => this.onClickSampler()} className={samplerClassName}>\n                SAMPLE \n              </div>\n              <div className=\"guilds-menu-container\">\n                <TransactionsView store={this.props.store}/>\n                <GuildsMenu store={this.props.store}/>\n              </div>\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        showLogin: state.sequencer.showLogin,\n    }\n};\n\nexport default connect(mapStateToProps, null)(UniversalNavigator);\n","/*\n    This file is part of Universal Sequencer.\n    Universal Sequencer is free software: you can redistribute it and/or modif\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    Universal Sequencer is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport React, { Component } from 'react';\nimport Sample from 'repos/Sample.js';\nimport Waveform from 'components/Waveform.js';\nimport { withRouter } from 'react-router';\nimport Tone from 'tone';\nimport axios from 'axios';\nimport YoutubeInfo from 'components/Youtube.js';\nimport { Badge, Card, Button, InputGroup, InputGroupAddon, InputGroupText, Input } from 'reactstrap';\nimport AudioUnit from 'engine/audio.js';\nimport createHistory from \"history/createBrowserHistory\"\n\nvar AudioContext = window.AudioContext || window.webkitAudioContext;\nvar audioCtx = new AudioContext();\n\nclass SampledSound extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            soundId: props.soundId,\n        };\n        this.audioUnit = new AudioUnit(audioCtx);\n        this.loadBuffer.bind(this);\n        this.handleLoadBuffer.bind(this);\n        this.loadBuffer();\n    }\n\n    shouldComponentUpdate(nextProps) {\n        if (nextProps.soundId !== this.state.soundId) {\n            this.state.soundId = nextProps.soundId;\n            this.loadBuffer();\n        }\n\n        return true;\n    }\n    \n    loadBuffer() {\n        var self = this;\n        console.log('loading buffer soundId = '+ this.props.soundId);\n        this.sample = new Sample(this.props.soundId, this.props.encryptedIpfs);\n        this.sample.name = this.props.title;\n        this.sample.videoId = this.props.videoId;\n        this.state.name = this.props.title;\n        this.state.videoId = this.props.videoId;\n        console.log('gonna fetch audio for id = ' + this.sample.getId());\n        this.sample.fetchAudio()\n            .then((sample) => {\n                this.audioUnit.setBuffer(sample.audioBuffer);\n                this.state.buffer = sample.audioBuffer;\n                this.setState(this.state);\n            });\n   }\n\n    handleLoadBuffer(self, buffer) {\n        var state = self.state;\n        state['buffer'] = buffer;\n        self.setState(state);\n    }\n    \n    render() {\n        var self = this;\n        if (this.state.buffer != undefined) {\n            return (\n                <div className={this.props.isSelected ? 'selected sound-row' : \"sound-row\"}>\n                    <div className=\"playlist-row\">\n                      <Waveform selections={[]}\n                                sample={this.sample}\n                                store={this.props.store}\n                                buffer={this.audioUnit.buffer}\n                                onClickSelection={(id, buffer) => []}\n                        height={70}\n                        width={350}\n                        onSelection={(start, end) => []}\n                        audioUnit={this.audioUnit}\n                        waveformId={0}></Waveform>\n                      <div className=\"youtube-info\">\n                            <YoutubeInfo onClickThumbnail={() => this.props.onClickThumbnail(this.state.soundId)}\n                              coverArt={this.props.coverArt}\n                                  sample={this.sample}\n                                  name={this.props.title}\n                                  isMuted={false}\n                                  soundId={this.state.soundId} \n                                  onNewSound={this.props.onNewSound} \n                                  videoId={this.state.videoId}>\n                        </YoutubeInfo>\n                      </div>\n                      <div\n                        onClick={this.props.onDelete}\n                        className=\"delete-button\">x</div>\n                    </div>\n                    {this.props.tags != null ? this.props.tags.map((tag) =>\n                      <Badge\n                        onClick={() => this.props.onDeleteTag(tag)}\n                        color=\"light\">{tag}</Badge>) : ''}\n                </div>\n                    );\n        } else {\n            return (<div></div>);\n        }\n    }\n}\n\nexport default SampledSound;\n","import axios from 'axios';\nimport ethereum from 'decentralized/ethereum.js';\nimport React, { Component } from 'react';\nimport { Badge, Label, Button, InputGroup, InputGroupAddon, InputGroupText, Input } from 'reactstrap';\n\nclass SoundTagger extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tags: []\n        };\n        this._tag = '';\n\n        this.addListener();\n    }\n\n    addListener() {\n        window.addEventListener('sound_selected', () => {\n            if (this.input) {\n                if (this.input !== document.activeElement) { \n                    this.input.focus();\n                }\n            }\n        });\n    }\n\n    addTag() {\n        this.state.tags.push(this._tag);\n        var self = this;\n        self.props.onUpdateTags(this._tag);\n        this._tag = '';\n        this.setState(this.state);\n    }\n\n    onInputType(value) {\n        this._tag = value;\n        this.setState(this.state);\n    }\n\n    onKeyPress(e) {\n        if (e.key === 'Enter') {\n            this.addTag();\n        }\n    }\n\n    render() {\n        return (<div className=\"tag-editor\">\n                {this.props.soundUploadMode ? '' : <div onClick={this.props.onClickBack} className=\"light-blue-button common-button\">Back to search</div>}\n                <div className=\"tags\">\n                   <InputGroup>\n                <div>\n                <input\n                type=\"text\"\n                ref={(input) => this.input = input}\n                autoFocus onKeyPress={(e) => this.onKeyPress(e)} value={this._tag} id=\"search-input\" onChange={(event) => this.onInputType(event.target.value)} placeholder=\"Enter tag name\" className=\"tag-discover-input\"/>\n                </div>\n                        <InputGroupAddon addonType=\"append\">\n                        <Button onClick={() => this.addTag()} color=\"secondary\">Tag</Button>\n                        </InputGroupAddon>\n                        </InputGroup>\n                </div>\n                </div>);\n    \n    }\n}\n\nexport default SoundTagger;\n","/*\n    This file is part of Universal Sequences.\n    Universal Sequences is free software: you can redistribute it and/or modif\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    Universal Sequences is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport Web3 from 'web3';\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport SampledSound from 'components/SampledSound.js';\nimport SoundTagger from 'components/SoundTagger.js';\nimport ipfs from 'decentralized/Ipfs.js';\nimport ethereum from 'decentralized/ethereum.js';\nimport Sample from 'repos/Sample.js';\nimport UniversalNavigator from 'components/UniversalNavigator.js';\nimport {web3} from 'decentralized/web3.js';\nimport '../App.css';\nimport accounts from 'accounts/Accounts.js';\nconst metamaskInstalled = false;\n\nclass SoundUpload extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: undefined,\n            description: '',\n            selectedFile: '',\n            soundIds: [],\n            soundIdToName: {},\n            soundIdToTags: {},\n            selectedSounds: {},\n        };\n\n        console.log('setting store', props.store);\n        accounts.setStore(props.store);\n        ethereum.crypto.store = props.store;\n        accounts.setEthereum(ethereum);\n        accounts.checkLogin();\n        ethereum.guilds.initGuilds();\n        ethereum.store = props.store;\n\n        window.sequencerEngine = {\n            store: props.store,\n            ethereum: ethereum,\n        };\n\n        window.addEventListener(\"dragenter\", function(e) {\n            e.preventDefault();\n            console.log('drag enter!');\n            e.dataTransfer.effectAllowed = \"none\";\n            e.dataTransfer.dropEffect = \"none\";\n        }, false);\n        \n        window.addEventListener(\"dragover\", function(e) {\n            e.preventDefault();\n            console.log('drag over!');\n            e.dataTransfer.effectAllowed = \"none\";\n            //e.dataTransfer.dropEffect = \"none\";\n            return false;\n        });\n\n        window.addEventListener(\"drop\", async (ev) => {\n            console.log('dropped!');\n            ev.preventDefault();\n            ev.dataTransfer.effectAllowed = \"none\";\n            ev.dataTransfer.dropEffect = \"none\";\n\n            if (ev.dataTransfer.items) {\n                // Use DataTransferItemList interface to access the file(s)\n                for (var i = 0; i < ev.dataTransfer.items.length; i++) {\n                    // If dropped items aren't files, reject them\n                    if (ev.dataTransfer.items[i].kind === 'file') {\n                        this.uploadFile(ev.dataTransfer.items[i].getAsFile());\n\n                    }\n                }\n            } else {\n                // Use DataTransfer interface to access the file(s)\n                for (var i = 0; i < ev.dataTransfer.files.length; i++) {\n                    console.log('... file[' + i + '].name = ' + ev.dataTransfer.files[i].name);\n                }\n            }\n            return false;\n        });\n    }\n\n    uploadFile(file) {\n        let reader = new FileReader();\n        reader.readAsArrayBuffer(file)\n        reader.onloadend = async () => {\n            console.log('read the file');\n            console.log(reader.result);\n            let hash = await ipfs.addArrayBuffer(reader.result);\n            console.log('hash = ' + hash);\n            this.state.soundIds.push(hash);\n            console.log('file name = ' + file.name);\n            this.state.soundIdToName[hash] = file.name;\n            this.setState(this.state);\n        };\n    }\n    \n    onChange = (e) => {\n        const state = this.state;\n        \n        \n        state.name = e.target.files[0].name;\n        \n        switch (e.target.name) {\n        case 'selectedFile':\n            state.selectedFile = e.target.files[0];\n            break;\n        default:\n            state[e.target.name] = e.target.value;\n            state.name = e.target.value;\n        }\n        \n        this.setState(state);\n    }\n    \n    startTagging() {\n        this.state.tagMode = true;\n        this.setState(this.state);\n    }\n\n    async onSubmit(e) {\n        e.preventDefault();\n        console.log('on submit called');\n        const { name, selectedFile } = this.state;\n\n        let hash = await ipfs.addBlob(selectedFile);\n        console.log('hash = ' + hash);\n        this.state.soundIds.push(hash);\n        this.state.soundIdToName[hash] = name;\n        this.setState(this.state);\n\n  }\n\n    selectSound(soundId) {                           \n        if (!this.state.selectedSounds[soundId]) {\n            let selectedSounds = {... this.state.selectedSounds};\n            selectedSounds[soundId] = true;\n            this.setState({selectedSounds: selectedSounds});\n        } else {\n            let selectedSounds = {... this.state.selectedSounds};\n            selectedSounds[soundId] = false;\n            this.setState({selectedSounds: selectedSounds});\n        }\n    }\n\n    loadTags() {\n        var self = this;\n        console.log('laoding tags');\n        this.state.soundIds.map(async (soundId) => {\n                    console.log('got tags for ' + soundId);\n                    let tags = await new Sample(soundId).fetchTags();\n                    self.state.soundIdToTags[soundId] = tags;\n                    self.setState(self.state);\n        });\n    }\n\n    saveToEthereum() {\n        let promises:Promise<void>[] = [];\n        let samples = [];\n\n        for (let hash in this.state.soundIdToTags) {\n            let tags = this.state.soundIdToTags[hash];\n            let styles = [null, null, null, null];\n\n            if (tags.length > 4) {\n                tags = tags.slice(0, 4);\n            } \n            for (let i=tags.length; i < 4; i++) {\n                tags.push('');\n            }\n\n            let title = this.state.soundIdToName[hash];\n            let date = new Date();\n\n            let nullBytes32 = web3.utils.padLeft('0x0', 64);\n            samples.push({\n                ipfsHash: hash,\n                title: title,\n                videoId: '',\n                tags: tags,\n                styles: ['', '', '', ''],\n                country: '',\n                year: date.getFullYear(),\n            });\n        }\n\n        ethereum.newSamplesWithMetadata(samples);\n    }\n\n    hasSelectedSounds() {\n        let selectedSounds = this.state.selectedSounds;\n        return  Object.keys(selectedSounds).some(\n            s => selectedSounds[s]);\n    }\n\n    selectAll() {\n        let selectedSounds = this.state.selectedSounds;\n        let hasSelectedSounds = this.hasSelectedSounds();\n\n        for (let i in this.state.soundIds) {\n            let soundId = this.state.soundIds[i];\n            selectedSounds[soundId] = !hasSelectedSounds;\n        }\n        this.setState({selectedSounds: selectedSounds});\n    }\n\n    addTag(tag) {\n        console.log('add tag called');\n        for (let id in this.state.selectedSounds) {\n            if (!this.state.selectedSounds[id]) {\n                continue;\n            }\n            if (id in this.state.soundIdToTags) {\n                this.state.soundIdToTags[id].push(tag);\n            } else {\n                this.state.soundIdToTags[id] = [tag];\n            }\n        }\n\n        console.log(this.state.soundIdToTags);\n\n        this.setState(this.state);\n    }\n\n    onDropHandler(ev) {\n        ev.stopPropagation();\n        ev.preventDefault();\n\n        ev.dataTransfer.effectAllowed = \"none\";\n        ev.dataTransfer.dropEffect = \"none\";\n    }\n\n    dragOverHandler(event) {\n        event.stopPropagation();\n        event.preventDefault();\n        event.dataTransfer.effectAllowed = \"none\";\n        event.dataTransfer.dropEffect = \"none\";\n        return false;\n    }\n\n    render() {\n        const { description, selectedFile } = this.state;\n        console.log('render called with soundIds = ' );\n        console.log(this.state.soundIds);\n        return (\n            <div\n              className=\"sound-upload-page\">\n              <UniversalNavigator store={this.props.store} showLogin={true}/>\n              <div className='upload-pane'>\n              <form onSubmit={(e) => this.onSubmit(e)}>\n                <input\n                  type=\"file\"\n                  name=\"selectedFile\"\n                  onChange={this.onChange}\n                  />\n                <button type=\"submit\">Submit</button>\n              </form>\n              <div className=\"video-buttons-container\">\n                <div className='pink-button common-button' onClick={() => this.startTagging()}>TAG</div>\n                <div className='pink-button common-button' onClick={() => this.saveToEthereum()}>SAVE</div>\n                <div className='pink-button common-button' onClick={() => this.selectAll()}>\n                  {this.hasSelectedSounds() ? 'UNSELECT ALL' : 'SELECT ALL'}</div>\n              </div>\n              <div className=\"sampled-sounds-container\">\n              {this.state.soundIds.map(\n                  (soundId) =>\n                      <SampledSound \n                            tags={this.state.soundIdToTags[soundId]}\n                            title={this.state.soundIdToName[soundId]}\n                            store={this.props.store}\n                            isSelected={this.state.selectedSounds[soundId]}\n                            onClickThumbnail={() => this.selectSound(soundId)}\n                            soundId={soundId}/>\n              )}\n            </div>\n                </div>\n                <div className=\"description-pane\">\n                {this.state.tagMode ?\n                 <SoundTagger\n                 uploadMode={true}\n                 soundIdToHash={this.state.soundIdToHash}\n                 onUpdateTags={(tags) => this.addTag(tags)}\n                 selectedSoundIds={this.state.selectedSoundIds}/> : ''}\n            </div>\n                </div>\n        );\n    }\n}\n\nexport default SoundUpload;\n"],"sourceRoot":""}