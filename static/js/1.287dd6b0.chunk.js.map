{"version":3,"sources":["components/modals/ZObjectModal.js","components/v3/RollingViewer.js","components/progressbar/ZObjectProgressBar.js","components/v3/dock/ZequencerDock.js","components/nft/NFTViewer.js"],"names":["react_bootstrap_Modal__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","zobject_data_types_js__WEBPACK_IMPORTED_MODULE_1__","actions_index_js__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_3___default","n","reactstrap__WEBPACK_IMPORTED_MODULE_4__","react_redux__WEBPACK_IMPORTED_MODULE_5__","connect","state","modal","zobject","dispatch","setZObjectModal","x","_ref","onOk","useCallback","sendMessage","outputByNumber","BANG","undefined","onCancel","text","link","okButtonText","cancelButtonText","a","createElement","dialogClassName","show","Body","className","Array","isArray","map","l","target","href","url","Footer","variant","onClick","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","components_mix_StepsVisualizer_js__WEBPACK_IMPORTED_MODULE_1__","react_redux__WEBPACK_IMPORTED_MODULE_2__","constants_view_modes_js__WEBPACK_IMPORTED_MODULE_3__","props","enableRollViewer","sequencer","viewMode","halftime","sequencerEngine","keyListener","sequenceRolling","trackRolling","isSequenceRolling","rollResolution","resolution","ARRANGEMENT_VIEW","toString","react_redux__WEBPACK_IMPORTED_MODULE_1__","components_progressbar_UnknownProgressBar_js__WEBPACK_IMPORTED_MODULE_2__","progressbar","intervalPiece","width","intervalTime","selectedZObject","_useState","useState","_useState2","Object","slicedToArray","showing","setShowing","inner","getObjectType","TRACK","concat","toConsumableArray","midiEffects","effects","e","react_default","name","onMouseEnter","onMouseLeave","loadingSequence","loading","window","projectId","isPlaying","isMainPlaying","setFullScreenZObject","setIsPlayingMix","isPlayingMix","renders","useRef","ref","zObject","useSequencer","_ref2","started","playing","setPlaying","elements","_useWindows","useWindows","sizeRef","ordering","setOrdering","originalSize","keys","some","s","useKeyListener","useEffect","current","addEventListener","preventDefault","passive","removeEventListener","subSequences","nftZObject","zObjects","height","innerWidth","innerHeight","effect","length","startaudiocontext","Tone","Master","context","screenshot","play","start","stopPropagation","setTimeout","react","fallback","ZObjectModal","ZObjectProgressBar","isMulti","RollingViewer","onMouseDown","src","ProgressBar","ZObjectComponent","scale","forceShow","isMainNFT","setSize","containerRef"],"mappings":"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","file":"static/js/1.287dd6b0.chunk.js","sourcesContent":["import Modal from 'react-bootstrap/Modal';\nimport {BANG} from 'zobject/data-types.js';\nimport {setZObjectModal} from 'actions/index.js';\nimport {useState, useCallback} from 'react';\nimport { Button } from 'reactstrap';\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport '../../Modals.scss';\nimport './zobject-modal.scss';\n\n/**\n * Modal responsible for sequence-wide changes like\n * double setting the track length\n */\nconst ZObjectModal = ({setZObjectModal, modal}) => {\n\n    const onOk = useCallback(() => {\n        modal.zobject.sendMessage(modal.zobject.outputByNumber(0), BANG);\n        setZObjectModal(undefined);\n    }, [modal]);\n\n    const onCancel = useCallback(() => {\n        modal.zobject.sendMessage(modal.zobject.outputByNumber(1), BANG);\n        setZObjectModal(undefined);\n    }, [modal]);\n\n    if (!modal) {\n        return '';\n    }\n    let {zobject, text, link, okButtonText, cancelButtonText} = modal;\n    return (\n        <Modal dialogClassName=\"zobject-modal rack-modal\" show={true}>\n          <Modal.Body>\n            <div>\n              {modal.text}\n            </div>\n            {link &&\n             <div className=\"modal-links\">\n               {(Array.isArray(link) ?\n              link.map(l => \n                  <div className=\"modal-link\">\n                    <div className=\"link-text\">{l.text}</div><a target=\"_blank\" href={l.url}>↗</a>\n                  </div>) : \n             <div className=\"modal-link\">\n               <div className=\"link-text\">{link.text}</div><a target=\"_blank\" href={link.url}>↗</a>\n             </div>)}\n             </div>}\n         </Modal.Body>\n          <Modal.Footer>\n            <Button\n              variant=\"secondary\"\n              onClick={onOk}>\n              {okButtonText || \"Ok\"}\n            </Button>\n        {cancelButtonText && <Button variant=\"primary\" onClick={onCancel}>\n                               {cancelButtonText || \"Cancel\"}\n                             </Button>}\n          </Modal.Footer>\n        </Modal>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        modal: state.zobject.modal\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setZObjectModal: x => dispatch(setZObjectModal(x))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ZObjectModal);\n","import React, { useEffect, useCallback, useState} from 'react';\nimport StepsVisualizer from \"components/mix/StepsVisualizer.js\";\nimport {connect} from 'react-redux';\nimport {ARRANGEMENT_VIEW} from 'constants/view-modes.js';\nimport '../../Mix.scss';\n\nconst RollingViewer = ({viewMode, sequenceRolling, enableRollViewer, sequencerEngine, halftime, rollResolution}) => { \n    if (!sequenceRolling && !halftime) {\n        return '';\n    }\n    if (viewMode === ARRANGEMENT_VIEW) {\n        return '';\n    }\n    if (!enableRollViewer) {\n        return '';\n    }\n    return (<div className=\"rolling-viewer\">\n              <div className=\"roll-text\">\n                {sequenceRolling ? <span>ROLLING {rollResolution.toString()}</span> :\n                 <span>HALF-TIME</span>}\n                <StepsVisualizer sequencerEngine={sequencerEngine}/>\n              </div>\n            </div>);\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n      enableRollViewer: state.sequencer.enableRollViewer,\n      viewMode: state.sequencer.viewMode,\n      halftime: props.sequencerEngine && props.sequencerEngine.keyListener && props.sequencerEngine.keyListener.halftime,\n      sequenceRolling: state.sequencer.trackRolling && props.sequencerEngine && props.sequencerEngine.isSequenceRolling,\n      rollResolution: state.sequencer.resolution\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RollingViewer);\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\nimport UnknownProgressBar from \"components/progressbar/UnknownProgressBar.js\";\n\nconst ZObjectProgressBar = ({progressbar}) => { \n    if (!progressbar) {\n        return '';\n    }\n    return (<UnknownProgressBar\n              intervalPiece={1}\n              width={200}\n              intervalTime={100}\n              text={progressbar}/>);\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n      progressbar: state.zobject.progressbar\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ZObjectProgressBar);\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {ZOBJECT, ZMESSAGE, PAD, TRACK} from 'constants/object-types.js';\nimport {connect} from 'react-redux';\nimport './dock.scss';\n\nconst ZequencerDock = ({selectedZObject, sequencerEngine}) => { \n    let [showing, setShowing] = useState(false);\n\n    let className = \"zequencer-dock\";\n    let inner = '';\n    if (showing) {\n        className += \" showing\";\n\n        if (selectedZObject && selectedZObject.getObjectType() === TRACK) {\n            let effects = [\n                ...selectedZObject.midiEffects.effects,\n                ... selectedZObject.effects\n            ];\n            inner = effects.map(\n                e => <div className=\"effect-option\">{e.name}</div>);\n        }\n    }\n\n    return (<div\n              onMouseEnter={e => setShowing(true)}\n              onMouseLeave={e => setShowing(false)}\n              className={className}>{inner}</div>);\n};\n\nconst mapStateToProps = (state, props) => {\n    let selected = state.zobject.selectedZObject;\n    return {\n        selectedZObject: selected,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ZequencerDock);\n","import React, { Suspense, useRef, useEffect, useCallback, useState} from 'react';\nimport ZequencerDock from \"components/v3/dock/ZequencerDock.js\";\nimport RollingViewer from \"components/v3/RollingViewer.js\";\nimport {setIsPlayingMix} from 'actions/index.js';\nimport {useKeyListener} from \"components/v2/useKeyListener.js\";\nimport startaudiocontext from 'startaudiocontext';\nimport Tone from 'tone';\nimport {useWindows} from \"components/windows/useWindows.js\"\nimport ZObjectComponent from \"components/zobject/ZObjectComponent.js\";\nimport ProgressBar from 'components/progressbar/ProgressBar.js';\nimport {useSequencer} from 'components/v2/useSequencer.js';\nimport {setFullScreenZObject} from 'actions/index.js';\nimport {connect} from 'react-redux';\nimport \"../../NFTViewer.scss\";\nimport '../v3/v3.scss';\nimport '../v3/editor/editor.scss';\nimport '../v3/pianoroll.scss';\nimport '../v3/colors.scss';\nimport '../v3/fullscreen.scss';\nimport '../../App.css';\nimport '../../QuickAdd.scss';\nimport '../../Sidebar.scss';\nimport '../../Installation.scss';\nimport '../../Sequences.css';\nimport '../../DrumMachineImportMode.css';\nimport '../../Cirklon.scss';\nimport '../../Groups.scss';\nimport '../../animation.css';\nimport '../../Preferences.css';\nimport '../../colors.scss';\nimport '../../Common.css';\nimport '../../NFT.scss';\nimport '../../Pulled.scss';\nimport '../../Pads2.scss';\nimport '../../subpatch.scss';\nimport '../../zobject.scss';\nimport 'react-dropdown/style.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport \"bootstrap-slider/dist/css/bootstrap-slider.css\";\nimport ZObjectModal from \"components/modals/ZObjectModal.js\";\nimport ZObjectProgressBar from \"components/progressbar/ZObjectProgressBar.js\";\n\nconst NFTViewer = (props) => { \n\n    // window.isNFT=true;\n    let renders = useRef(0);\n    let ref = useRef(undefined);\n    let [ethereumCache, sequencerEngine, ethereumSearcher] = props.zObject ?\n        [undefined, props.sequencerEngine] : useSequencer(props);\n    let started = useRef(undefined);\n    let [playing, setPlaying] = useState(false);\n\n\n    const elements = useRef({});\n    const {sizeRef, ordering, setOrdering} = useWindows({ref});\n    const originalSize  = useRef(undefined);\n\n    let loadingSequence = Object.keys(props.loadingSequence).some(\n        (s) => props.loadingSequence[s]);\n\n    useKeyListener({sequencerEngine: props.sequencerEngine ? undefined : sequencerEngine});\n\n    useEffect(() => {\n        ref.current.addEventListener(\"mousewheel\", preventDefault, {passive: false});\n        window.addEventListener(\"mousewheel\", preventDefault, {passive: false});\n\n        return () => {\n            if (ref.current) {\n                ref.current.removeEventListener(\"mousewheel\", preventDefault, {passive: false});\n            }\n            window.removeEventListener(\"mousewheel\", preventDefault, {passive: false});\n        };\n    }, []);\n\n    const preventDefault = (e) => e.preventDefault();\n    \n    let zObject;\n    if (props.zObject) {\n        zObject = props.zObject;\n    } else if (!loadingSequence && sequencerEngine && sequencerEngine.subSequences && sequencerEngine.subSequences[0]) {\n        zObject = sequencerEngine.nftZObject || sequencerEngine.subSequences[0].zObjects[0];\n    }\n\n    if (!loadingSequence && sequencerEngine && sequencerEngine.subSequences && sequencerEngine.subSequences[0]) {\n        // for now just get the first zobject\n        if (zObject && zObject.name === \"three.canvas\") {\n            if (!originalSize.current) {\n                originalSize.current = {width: zObject.width, height: zObject.height};\n            }\n            zObject.width = window.innerWidth;\n            zObject.height = window.innerHeight;\n            zObject.effect.sendMessage(\"size\", [zObject.width, zObject.height]);\n        }\n    }\n\n    useEffect(() => {\n        setPlaying(props.isPlaying);\n    }, [props.isPlaying, setPlaying]);\n\n\n    useEffect(() => {\n        if (!props.sequencerEngine && props.loadingSequence && Object.keys(props.loadingSequence).length > 0 &&\n            !loadingSequence) {\n            startaudiocontext(Tone.Master.context, \".editor\");\n            if (props.screenshot) {\n                sequencerEngine.play();\n            }\n        }\n    }, [loadingSequence, props.loadingSequence, sequencerEngine]);\n\n    useEffect(() => {\n        return () => {\n            if (props.zObject && originalSize.current) {\n                props.zObject.width = originalSize.current.width;\n                props.zObject.height = originalSize.current.height;\n            }\n        };\n    }, []);\n\n    const start = useCallback((e) => {\n        if (e) {\n            e.stopPropagation();\n        }\n        if (!props.sequencerEngine) {\n            props.setIsPlayingMix(true);\n            if (!started.current) {\n                // sequencerEngine.tracks[0].liveTrigger();\n                setTimeout(() => {\n                    sequencerEngine.play();\n                    setPlaying(true);\n                }, 150);\n                started.current = true;\n            } else {\n                sequencerEngine.play();\n                setPlaying(!playing);\n            }\n        }\n    }, [sequencerEngine, setPlaying, playing]);\n\n    const exitFullScreen = () => {\n        props.setFullScreenZObject(undefined);\n    };\n\n    renders.current++;\n\n    return (\n        <Suspense fallback={() => <div>Loading...</div>}>\n          <div className=\"v3 nft-mode no-select\">\n            <ZObjectModal/>\n            <ZObjectProgressBar/>\n            <div className=\"editor\">\n              {!props.isMulti && <RollingViewer sequencerEngine={sequencerEngine}/>}\n              {!started.current && !props.screenshot && !props.sequencerEngine && !props.isPlaying &&\n               <div\n                 onMouseDown={!loadingSequence ? start : () => []}\n                 className={renders.current <= 1 || loadingSequence ? \"click-to-start loading \" :\"click-to-start\"}>\n                 <div className=\"image-wrapper\">\n                   <img className=\"helper-image\" src=\"spore-helper-no-arrow.svg\"/>\n                   <img className=\"arrow-1\" src=\"arrow-up-and-down.svg\"/>\n                   <img className=\"arrow-2\" src=\"arrow-up-and-down.svg\"/>\n                   <img className=\"arrow-3\" src=\"arrow-up-and-down.svg\"/>\n                   <img className=\"arrow-4\" src=\"arrow-up-and-down.svg\"/>\n                 </div>\n               {!loadingSequence &&\n                 <span>\n                   Click to start\n                 </span>}\n               </div>}\n              <div\n                className=\"nft-viewer\"\n                ref={ref}>\n                {!props.isMulti && props.sequencerEngine && <img\n                                className=\"expand-icon\"\n                                onClick={exitFullScreen}\n                                src=\"/expand-icon.svg\"/>}\n                {loadingSequence ? \n                 <ProgressBar sequencerEngine={sequencerEngine}/> : ''}\n                {zObject &&\n                 <ZObjectComponent\n                   scale={1}\n                   forceShow={true}\n                   sequencerEngine={sequencerEngine}\n                   isMainNFT={true}\n                   ordering={ordering}\n                   setOrdering={setOrdering}\n                   setSize={() => []}\n                   sizeRef={sizeRef}\n                   elements={elements}\n                   containerRef={ref}\n                   zobject={zObject}/>}\n                {/*<ZequencerDock sequencerEngine={sequencerEngine}/>*/}\n              </div>\n            </div>\n          </div>\n        </Suspense>\n    );\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n      loadingSequence: state.sequencer.loadingSequence,\n      loading: state.sequencer.loadingSequence[window.projectId],\n      isPlaying: state.sequencer.isMainPlaying\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n      setFullScreenZObject: x => dispatch(setFullScreenZObject(x)),\n      setIsPlayingMix: isPlayingMix => dispatch(setIsPlayingMix(isPlayingMix)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NFTViewer);\n"],"sourceRoot":""}