{"version":3,"sources":["components/nft/ExpandedMints.js","components/nft/MintedProject.js","components/nft/NFTsPage.js"],"names":["connect","state","props","dispatch","_ref","project","_useState","useState","_useState2","Object","slicedToArray","minting","setMinting","onClickMint","useCallback","e","mintToken","projectId","react_default","a","createElement","mints","map","mint","onClick","window","location","href","tokenId","goToMint","className","TokenIcon","seedHash","UnknownProgressBar","text","length","maxInvocations","expand","setExpand","title","creator","slice","nft_ExpandedMints","projects","setProjects","useEffect","getMintedProjects","then","nft_MintedProject"],"mappings":"yLA6CeA,cAVS,SAACC,EAAOC,GAC9B,MAAO,IAIkB,SAACC,GAC1B,MAAO,IAIMH,CAvCO,SAAAI,GAAe,IAAbC,EAAaD,EAAbC,QAAaC,EACLC,oBAAS,GADJC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAC5BK,EAD4BH,EAAA,GACnBI,EADmBJ,EAAA,GAE3BK,EAAcC,sBAAY,SAACC,GAC7BC,YAAUX,EAAQY,WAClBL,GAAW,IACZ,CAACP,EAASO,IAMb,OACIM,EAAAC,EAAAC,cAAA,WACGf,EAAQgB,MAAMC,IACX,SAAAC,GAAI,OACAL,EAAAC,EAAAC,cAAA,OACEI,QAAS,kBATR,SAACD,GACdE,OAAOC,SAASC,KAAO,QAAUJ,EAAKN,UAAY,IAAMM,EAAKK,QAQlCC,CAASN,IACxBO,UAAU,QACVZ,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,SAAUT,EAAKS,WACzBT,EAAKK,WAGfjB,EAAUO,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAoBC,KAAK,YACpC7B,EAAQgB,MAAMc,OAAS9B,EAAQ+B,gBAC9BlB,EAAAC,EAAAC,cAAA,OAAKI,QAASX,EAAaiB,UAAU,eAArC,WCEI9B,cAVS,SAACC,EAAOC,GAC9B,MAAO,IAIkB,SAACC,GAC1B,MAAO,IAIMH,CA5BO,SAAAI,GAAe,IAAbC,EAAaD,EAAbC,QAAaC,EACPC,oBAAS,GADFC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAC5B+B,EAD4B7B,EAAA,GACpB8B,EADoB9B,EAAA,GAEjC,OACIU,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKI,QAAS,kBAAMc,GAAWD,IAASP,UAAU,kBAChDZ,EAAAC,EAAAC,cAAA,OAAKU,UAAU,iBAAiBzB,EAAQkC,OACxCrB,EAAAC,EAAAC,cAAA,OAAKU,UAAU,UACZzB,EAAQmC,QAAQC,MAAM,EAAG,GAD5B,OAGAvB,EAAAC,EAAAC,cAAA,OAAKU,UAAU,SACZzB,EAAQgB,MAAMc,OADjB,MAC4B9B,EAAQ+B,iBAGrCC,GAAUnB,EAAAC,EAAAC,cAACsB,EAAD,CAAerC,QAASA,eCsB5BL,sBAVS,SAACC,EAAOC,GAC9B,MAAO,IAIkB,SAACC,GAC1B,MAAO,IAIMH,CAjCE,SAACE,GAAU,IAAAI,EACMC,mBAAS,IADfC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACnBqC,EADmBnC,EAAA,GACToC,EADSpC,EAAA,GAQxB,OALAqC,oBAAU,WACNC,cAAoBC,KAChBH,IACL,CAACA,IAGA1B,EAAAC,EAAAC,cAAA,OAAKU,UAAU,aACbZ,EAAAC,EAAAC,cAAA,OAAKU,UAAU,mBAAf,mBAGAZ,EAAAC,EAAAC,cAAA,OAAKU,UAAU,iBACZa,EAASrB,IACN,SAAAjB,GAAO,OACHa,EAAAC,EAAAC,cAAC4B,EAAD,CAAe3C,QAASA","file":"static/js/20.4a50df74.chunk.js","sourcesContent":["import React, { useEffect, useCallback, useState} from 'react';\nimport TokenIcon from \"components/toolbar/TokenIcon.js\";\nimport {mintToken} from 'nft/mint.js';\nimport {connect} from 'react-redux';\nimport UnknownProgressBar from \"components/progressbar/UnknownProgressBar.js\";\n\nconst ExpandedMints = ({project}) => { \n    let [minting, setMinting] = useState(false);\n    const onClickMint = useCallback((e) => {\n        mintToken(project.projectId);\n        setMinting(true);\n    }, [project, setMinting]);\n\n    const goToMint = (mint) => {\n        window.location.href = \"/nft/\" + mint.projectId + \"/\" + mint.tokenId;\n    };\n\n    return (\n        <div>\n          {project.mints.map(\n              mint =>\n                  <div\n                    onClick={() => goToMint(mint)}\n                    className=\"mint\">\n                    <TokenIcon seedHash={mint.seedHash}/>\n                    {mint.tokenId}\n                  </div>\n          )}\n          {minting ? <UnknownProgressBar text=\"Minting\"/> :\n          project.mints.length < project.maxInvocations &&\n           <div onClick={onClickMint} className=\"mint-button\">Mint</div>}\n        </div>\n    );\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpandedMints);\n","import React, { useEffect, useCallback, useState} from 'react';\nimport ExpandedMints from './ExpandedMints.js';\nimport {connect} from 'react-redux';\n\nconst MintedProject = ({project}) => { \n    let [expand, setExpand] = useState(false);\n    return (\n        <div>\n        <div onClick={() => setExpand(!expand)} className=\"minted-project\">\n          <div className=\"project-title\">{project.title}</div>\n          <div className=\"author\">\n            {project.creator.slice(0, 8)}...\n          </div>\n          <div className=\"mints\">\n            {project.mints.length} / {project.maxInvocations}\n          </div>\n        </div>\n        {expand && <ExpandedMints project={project}/>}\n        </div>\n    );\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MintedProject);\n","import React, { useEffect, useCallback, useState} from 'react';\nimport MintedProject from './MintedProject.js';\nimport {connect} from 'react-redux';\nimport '../../NFTsPage.scss';\nimport {getMintedProjects} from 'nft/mint.js';\n\nconst NFTsPage = (props) => { \n    let [projects, setProjects] = useState([]);\n\n    useEffect(() => {\n        getMintedProjects().then(\n            setProjects);\n    }, [setProjects]);\n\n    return (\n        <div className=\"nfts-page\">\n          <div className=\"projects-header\">\n            Minted Projects\n          </div>\n          <div className=\"projects-list\">\n            {projects.map(\n                project =>\n                    <MintedProject project={project}/>\n            )}\n          </div>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NFTsPage);\n"],"sourceRoot":""}